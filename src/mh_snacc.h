/*
 *    mh_snacc.h
 *
 *    "ISO13522-MHEG-5" ASN.1 module C type definitions and prototypes
 *
 *    This .h file was generated by snacc on Wed Jun 19 13:51:19 2002
 *
 *    UBC snacc written compiler by Mike Sample
 *
 *    NOTE: This is a machine generated file--editing not recommended
 */


#ifndef _mh_snacc_h_
#define _mh_snacc_h_





#define INFINITY 0

typedef AsnInt StreamClassInt; /* INTEGER { INFINITY (0) }  */

#define BEncStreamClassIntContent BEncAsnIntContent

#define BDecStreamClassIntContent BDecAsnIntContent





#define SOLID 1
#define DASHED 2
#define DOTTED 3

typedef AsnInt LineArtClassInt; /* INTEGER { SOLID (1), DASHED (2), DOTTED (3) }  */

#define BEncLineArtClassIntContent BEncAsnIntContent

#define BDecLineArtClassIntContent BDecAsnIntContent




typedef enum
    {
        IS_AVAILABLE = 1,
        CONTENT_AVAILABLE = 2,
        IS_DELETED = 3,
        IS_RUNNING = 4,
        IS_STOPPED = 5,
        USER_INPUT = 6,
        ANCHOR_FIRED = 7,
        TIMER_FIRED = 8,
        ASYNCH_STOPPED = 9,
        INTERACTION_COMPLETED = 10,
        TOKEN_MOVED_FROM = 11,
        TOKEN_MOVED_TO = 12,
        STREAM_EVENT = 13,
        STREAM_PLAYING = 14,
        STREAM_STOPPED = 15,
        COUNTER_TRIGGER = 16,
        HIGHLIGHT_ON = 17,
        HIGHLIGHT_OFF = 18,
        CURSOR_ENTER = 19,
        CURSOR_LEAVE = 20,
        IS_SELECTED = 21,
        IS_DESELECTED = 22,
        TEST_EVENT = 23,
        FIRST_ITEM_PRESENTED = 24,
        LAST_ITEM_PRESENTED = 25,
        HEAD_ITEMS = 26,
        TAIL_ITEMS = 27,
        ITEM_SELECTED = 28,
        ITEM_DESELECTED = 29,
        ENTRY_FIELD_FULL = 30,
        ENGINE_EVENT = 31,
        FOCUS_MOVED = 32,
        SLIDER_VALUE_CHANGED = 33
    } EventType; /* ENUMERATED { IS_AVAILABLE (1), CONTENT_AVAILABLE (2), IS_DELETED (3), IS_RUNNING (4), IS_STOPPED (5), USER_INPUT (6), ANCHOR_FIRED (7), TIMER_FIRED (8), ASYNCH_STOPPED (9), INTERACTION_COMPLETED (10), TOKEN_MOVED_FROM (11), TOKEN_MOVED_TO (12), STREAM_EVENT (13), STREAM_PLAYING (14), STREAM_STOPPED (15), COUNTER_TRIGGER (16), HIGHLIGHT_ON (17), HIGHLIGHT_OFF (18), CURSOR_ENTER (19), CURSOR_LEAVE (20), IS_SELECTED (21), IS_DESELECTED (22), TEST_EVENT (23), FIRST_ITEM_PRESENTED (24), LAST_ITEM_PRESENTED (25), HEAD_ITEMS (26), TAIL_ITEMS (27), ITEM_SELECTED (28), ITEM_DESELECTED (29), ENTRY_FIELD_FULL (30), ENGINE_EVENT (31), FOCUS_MOVED (32), SLIDER_VALUE_CHANGED (33) }  */

#define BEncEventTypeContent BEncAsnEnumContent

#define BDecEventTypeContent BDecAsnEnumContent




typedef enum
    {
        START = 1,
        END = 2,
        CENTRE = 3,
        JUSTIFIED = 4
    } Justification; /* ENUMERATED { START (1), END (2), CENTRE (3), JUSTIFIED (4) }  */

#define BEncJustificationContent BEncAsnEnumContent

#define BDecJustificationContent BDecAsnEnumContent




typedef enum
    {
        VERTICAL = 1,
        HORIZONTAL = 2
    } LineOrientation; /* ENUMERATED { VERTICAL (1), HORIZONTAL (2) }  */

#define BEncLineOrientationContent BEncAsnEnumContent

#define BDecLineOrientationContent BDecAsnEnumContent




typedef enum
    {
        UPPER_LEFT = 1,
        UPPER_RIGHT = 2,
        LOWER_LEFT = 3,
        LOWER_RIGHT = 4
    } StartCorner; /* ENUMERATED { UPPER_LEFT (1), UPPER_RIGHT (2), LOWER_LEFT (3), LOWER_RIGHT (4) }  */

#define BEncStartCornerContent BEncAsnEnumContent

#define BDecStartCornerContent BDecAsnEnumContent




typedef enum
    {
        MEMORY = 1,
        STREAM = 2
    } Storage; /* ENUMERATED { MEMORY (1), STREAM (2) }  */

#define BEncStorageContent BEncAsnEnumContent

#define BDecStorageContent BDecAsnEnumContent




typedef enum
    {
        FREEZE = 1,
        DISAPPEAR = 2
    } Termination; /* ENUMERATED { FREEZE (1), DISAPPEAR (2) }  */

#define BEncTerminationContent BEncAsnEnumContent

#define BDecTerminationContent BDecAsnEnumContent




typedef enum
    {
        LEFT = 1,
        RIGHT = 2,
        UP = 3,
        DOWN = 4
    } Orientation; /* ENUMERATED { LEFT (1), RIGHT (2), UP (3), DOWN (4) }  */

#define BEncOrientationContent BEncAsnEnumContent

#define BDecOrientationContent BDecAsnEnumContent




typedef enum
    {
        NORMAL = 1,
        THERMOMETER = 2,
        PROPORTIONAL = 3
    } SliderStyle; /* ENUMERATED { NORMAL (1), THERMOMETER (2), PROPORTIONAL (3) }  */

#define BEncSliderStyleContent BEncAsnEnumContent

#define BDecSliderStyleContent BDecAsnEnumContent




typedef enum
    {
        ALPHA = 1,
        NUMERIC = 2,
        ANY = 3,
        LISTED = 4
    } InputType; /* ENUMERATED { ALPHA (1), NUMERIC (2), ANY (3), LISTED (4) }  */

#define BEncInputTypeContent BEncAsnEnumContent

#define BDecInputTypeContent BDecAsnEnumContent




typedef enum
    {
        PUSHBUTTON = 1,
        RADIOBUTTON = 2,
        CHECKBOX = 3
    } ButtonStyle; /* ENUMERATED { PUSHBUTTON (1), RADIOBUTTON (2), CHECKBOX (3) }  */

#define BEncButtonStyleContent BEncAsnEnumContent

#define BDecButtonStyleContent BDecAsnEnumContent




typedef AsnOcts ContentReference; /* OCTET STRING */

#define BEncContentReferenceContent BEncAsnOctsContent

#define BDecContentReferenceContent BDecAsnOctsContent




typedef struct StandardIdentifier /* SEQUENCE */
{
    AsnInt joint_iso_itu; /* INTEGER (2) */
    AsnInt mheg; /* INTEGER (19) */
} StandardIdentifier;

AsnLen BEncStandardIdentifierContent PROTO ((BUF_TYPE b, StandardIdentifier *v));

void BDecStandardIdentifierContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, StandardIdentifier *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SceneCoordinateSystem /* SEQUENCE */
{
    AsnInt x_scene; /* INTEGER */
    AsnInt y_scene; /* INTEGER */
} SceneCoordinateSystem;

AsnLen BEncSceneCoordinateSystemContent PROTO ((BUF_TYPE b, SceneCoordinateSystem *v));

void BDecSceneCoordinateSystemContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SceneCoordinateSystem *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct AspectRatio /* SEQUENCE */
{
    AsnInt width; /* INTEGER */
    AsnInt height; /* INTEGER */
} AspectRatio;

AsnLen BEncAspectRatioContent PROTO ((BUF_TYPE b, AspectRatio *v));

void BDecAspectRatioContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, AspectRatio *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct NextScene /* SEQUENCE */
{
    AsnOcts scene_ref; /* OCTET STRING */
    AsnInt scene_weight; /* INTEGER (0..255) */
} NextScene;

AsnLen BEncNextSceneContent PROTO ((BUF_TYPE b, NextScene *v));

void BDecNextSceneContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, NextScene *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct EventData /* CHOICE */
{
    enum EventDataChoiceId
    {
        EVENTDATA_OCTETSTRING,
        EVENTDATA_BOOLEAN,
        EVENTDATA_INTEGER
    } choiceId;
    union EventDataChoiceUnion
    {
    AsnOcts* octetstring; /* OCTET STRING */
    AsnBool boolean; /* BOOLEAN */
    AsnInt integer; /* INTEGER */
    } a;
} EventData;

AsnLen BEncEventDataContent PROTO ((BUF_TYPE b, EventData *v));

void BDecEventDataContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, EventData *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef AsnList Movement; /* SEQUENCE SIZE (1..MAX) OF INTEGER */

AsnLen BEncMovementContent PROTO ((BUF_TYPE b, Movement *v));

void BDecMovementContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, Movement *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct OriginalBoxSize /* SEQUENCE */
{
    AsnInt x_length; /* INTEGER (0..MAX) */
    AsnInt y_length; /* INTEGER (0..MAX) */
} OriginalBoxSize;

AsnLen BEncOriginalBoxSizeContent PROTO ((BUF_TYPE b, OriginalBoxSize *v));

void BDecOriginalBoxSizeContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, OriginalBoxSize *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct ExternalReference /* SEQUENCE */
{
    AsnOcts group_identifier; /* OCTET STRING */
    AsnInt object_number; /* INTEGER (0..MAX) */
} ExternalReference;

AsnLen BEncExternalReferenceContent PROTO ((BUF_TYPE b, ExternalReference *v));

void BDecExternalReferenceContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ExternalReference *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct Colour /* CHOICE */
{
    enum ColourChoiceId
    {
        COLOUR_COLOUR_INDEX,
        COLOUR_ABSOLUTE_COLOUR
    } choiceId;
    union ColourChoiceUnion
    {
    AsnInt colour_index; /* INTEGER */
    AsnOcts* absolute_colour; /* OCTET STRING */
    } a;
} Colour;

AsnLen BEncColourContent PROTO ((BUF_TYPE b, Colour *v));

void BDecColourContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, Colour *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct XYPosition /* SEQUENCE */
{
    AsnInt x_position; /* INTEGER */
    AsnInt y_position; /* INTEGER */
} XYPosition;

AsnLen BEncXYPositionContent PROTO ((BUF_TYPE b, XYPosition *v));

void BDecXYPositionContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, XYPosition *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef AsnList ListGroupClassSeqOf; /* SEQUENCE OF XYPosition */

AsnLen BEncListGroupClassSeqOfContent PROTO ((BUF_TYPE b, ListGroupClassSeqOf *v));

void BDecListGroupClassSeqOfContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ListGroupClassSeqOf *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef AsnList TokenManagerClassSeqOf; /* SEQUENCE OF Movement */

AsnLen BEncTokenManagerClassSeqOfContent PROTO ((BUF_TYPE b, TokenManagerClassSeqOf *v));

void BDecTokenManagerClassSeqOfContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TokenManagerClassSeqOf *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef AsnList SceneClassSeqOf; /* SEQUENCE OF NextScene */

AsnLen BEncSceneClassSeqOfContent PROTO ((BUF_TYPE b, SceneClassSeqOf *v));

void BDecSceneClassSeqOfContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SceneClassSeqOf *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct ReferencedContent /* SEQUENCE */
{
    ContentReference content_reference; /* ContentReference */
    AsnInt* content_size; /* [60] IMPLICIT INTEGER OPTIONAL */
    AsnInt* content_cache_priority; /* [61] IMPLICIT INTEGER (0..255) DEFAULT 127 */
} ReferencedContent;

AsnLen BEncReferencedContentContent PROTO ((BUF_TYPE b, ReferencedContent *v));

void BDecReferencedContentContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ReferencedContent *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct TokenManagerClass /* SET */
{
    TokenManagerClassSeqOf* movement_table; /* [70] IMPLICIT TokenManagerClassSeqOf SIZE (1..MAX) OPTIONAL */
} TokenManagerClass;

AsnLen BEncTokenManagerClassContent PROTO ((BUF_TYPE b, TokenManagerClass *v));

void BDecTokenManagerClassContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TokenManagerClass *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct InteractibleClass /* SET */
{
    AsnBool* engine_resp; /* [101] IMPLICIT BOOLEAN DEFAULT TRUE */
    struct Colour* highlight_ref_colour; /* [49] Colour OPTIONAL */
} InteractibleClass;

AsnLen BEncInteractibleClassContent PROTO ((BUF_TYPE b, InteractibleClass *v));

void BDecInteractibleClassContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, InteractibleClass *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct ObjectReference /* CHOICE */
{
    enum ObjectReferenceChoiceId
    {
        OBJECTREFERENCE_EXTERNAL_REFERENCE,
        OBJECTREFERENCE_INTERNAL_REFERENCE
    } choiceId;
    union ObjectReferenceChoiceUnion
    {
    struct ExternalReference* external_reference; /* ExternalReference */
    AsnInt internal_reference; /* INTEGER (1..MAX) */
    } a;
} ObjectReference;

AsnLen BEncObjectReferenceContent PROTO ((BUF_TYPE b, ObjectReference *v));

void BDecObjectReferenceContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ObjectReference *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct ObjectReference IndirectReference; /* [236] ObjectReference */

#define BEncIndirectReferenceContent BEncObjectReferenceContent

#define BDecIndirectReferenceContent BDecObjectReferenceContent




typedef struct GenericObjectReference /* CHOICE */
{
    enum GenericObjectReferenceChoiceId
    {
        GENERICOBJECTREFERENCE_DIRECT_REFERENCE,
        GENERICOBJECTREFERENCE_INDIRECT_REFERENCE
    } choiceId;
    union GenericObjectReferenceChoiceUnion
    {
    struct ObjectReference* direct_reference; /* ObjectReference */
    IndirectReference* indirect_reference; /* IndirectReference */
    } a;
} GenericObjectReference;

AsnLen BEncGenericObjectReferenceContent PROTO ((BUF_TYPE b, GenericObjectReference *v));

void BDecGenericObjectReferenceContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GenericObjectReference *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GenericContentReference /* CHOICE */
{
    enum GenericContentReferenceChoiceId
    {
        GENERICCONTENTREFERENCE_CONTENT_REFERENCE,
        GENERICCONTENTREFERENCE_INDIRECT_REFERENCE
    } choiceId;
    union GenericContentReferenceChoiceUnion
    {
    ContentReference* content_reference; /* [69] IMPLICIT ContentReference */
    IndirectReference* indirect_reference; /* IndirectReference */
    } a;
} GenericContentReference;

AsnLen BEncGenericContentReferenceContent PROTO ((BUF_TYPE b, GenericContentReference *v));

void BDecGenericContentReferenceContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GenericContentReference *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GenericInteger /* CHOICE */
{
    enum GenericIntegerChoiceId
    {
        GENERICINTEGER_INTEGER,
        GENERICINTEGER_INDIRECT_REFERENCE
    } choiceId;
    union GenericIntegerChoiceUnion
    {
    AsnInt integer; /* INTEGER */
    IndirectReference* indirect_reference; /* IndirectReference */
    } a;
} GenericInteger;

AsnLen BEncGenericIntegerContent PROTO ((BUF_TYPE b, GenericInteger *v));

void BDecGenericIntegerContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GenericInteger *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GenericBoolean /* CHOICE */
{
    enum GenericBooleanChoiceId
    {
        GENERICBOOLEAN_BOOLEAN,
        GENERICBOOLEAN_INDIRECT_REFERENCE
    } choiceId;
    union GenericBooleanChoiceUnion
    {
    AsnBool boolean; /* BOOLEAN */
    IndirectReference* indirect_reference; /* IndirectReference */
    } a;
} GenericBoolean;

AsnLen BEncGenericBooleanContent PROTO ((BUF_TYPE b, GenericBoolean *v));

void BDecGenericBooleanContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GenericBoolean *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GenericOctetString /* CHOICE */
{
    enum GenericOctetStringChoiceId
    {
        GENERICOCTETSTRING_OCTETSTRING,
        GENERICOCTETSTRING_INDIRECT_REFERENCE
    } choiceId;
    union GenericOctetStringChoiceUnion
    {
    AsnOcts* octetstring; /* OCTET STRING */
    IndirectReference* indirect_reference; /* IndirectReference */
    } a;
} GenericOctetString;

AsnLen BEncGenericOctetStringContent PROTO ((BUF_TYPE b, GenericOctetString *v));

void BDecGenericOctetStringContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GenericOctetString *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef AsnList StorePersistentSeqOf; /* SEQUENCE OF ObjectReference */

AsnLen BEncStorePersistentSeqOfContent PROTO ((BUF_TYPE b, StorePersistentSeqOf *v));

void BDecStorePersistentSeqOfContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, StorePersistentSeqOf *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef AsnList ReadPersistentSeqOf; /* SEQUENCE OF ObjectReference */

AsnLen BEncReadPersistentSeqOfContent PROTO ((BUF_TYPE b, ReadPersistentSeqOf *v));

void BDecReadPersistentSeqOfContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ReadPersistentSeqOf *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct ObjectReference RootClass; /* ObjectReference */

#define BEncRootClassContent BEncObjectReferenceContent

#define BDecRootClassContent BDecObjectReferenceContent




typedef struct FontBody /* CHOICE */
{
    enum FontBodyChoiceId
    {
        FONTBODY_DIRECT_FONT,
        FONTBODY_INDIRECT_FONT
    } choiceId;
    union FontBodyChoiceUnion
    {
    AsnOcts* direct_font; /* OCTET STRING */
    struct ObjectReference* indirect_font; /* ObjectReference */
    } a;
} FontBody;

AsnLen BEncFontBodyContent PROTO ((BUF_TYPE b, FontBody *v));

void BDecFontBodyContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, FontBody *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct ContentBody /* CHOICE */
{
    enum ContentBodyChoiceId
    {
        CONTENTBODY_INCLUDED_CONTENT,
        CONTENTBODY_REFERENCED_CONTENT
    } choiceId;
    union ContentBodyChoiceUnion
    {
    AsnOcts* included_content; /* OCTET STRING */
    struct ReferencedContent* referenced_content; /* ReferencedContent */
    } a;
} ContentBody;

AsnLen BEncContentBodyContent PROTO ((BUF_TYPE b, ContentBody *v));

void BDecContentBodyContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ContentBody *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct LinkCondition /* SEQUENCE */
{
    struct ObjectReference* event_source; /* ObjectReference */
    EventType event_type; /* EventType */
    struct EventData* event_data; /* EventData OPTIONAL */
} LinkCondition;

AsnLen BEncLinkConditionContent PROTO ((BUF_TYPE b, LinkCondition *v));

void BDecLinkConditionContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, LinkCondition *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct ProgramClass /* SET */
{
    RootClass* rootClass; /* RootClass (WITH COMPONENTS
{
    ...,
    external-reference (WITH COMPONENTS
    {
        ...,
        object-number (1..MAX)
    })
}) */
    AsnBool* initially_active; /* [56] IMPLICIT BOOLEAN DEFAULT TRUE */
    AsnInt* content_hook; /* [57] IMPLICIT INTEGER OPTIONAL */
    struct ContentBody* original_content; /* [58] ContentBody OPTIONAL */
    AsnBool* shared; /* [59] IMPLICIT BOOLEAN DEFAULT FALSE */
    AsnOcts name; /* [64] IMPLICIT OCTET STRING */
    AsnBool* initially_available; /* [65] IMPLICIT BOOLEAN DEFAULT TRUE */
} ProgramClass;

AsnLen BEncProgramClassContent PROTO ((BUF_TYPE b, ProgramClass *v));

void BDecProgramClassContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ProgramClass *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct ProgramClass ResidentProgramClass; /* ProgramClass (WITH COMPONENTS
{
    ...,
    content-hook  ABSENT,
    original-content  ABSENT
}) */

#define BEncResidentProgramClassContent BEncProgramClassContent

#define BDecResidentProgramClassContent BDecProgramClassContent




typedef struct RemoteProgramClass /* SET */
{
    RootClass* rootClass; /* RootClass (WITH COMPONENTS
{
    ...,
    external-reference (WITH COMPONENTS
    {
        ...,
        object-number (1..MAX)
    })
}) */
    AsnBool* initially_active; /* [56] IMPLICIT BOOLEAN DEFAULT TRUE */
    AsnInt* content_hook; /* [57] IMPLICIT INTEGER OPTIONAL */
    struct ContentBody* original_content; /* [58] ContentBody OPTIONAL */
    AsnBool* shared; /* [59] IMPLICIT BOOLEAN DEFAULT FALSE */
    AsnOcts name; /* [64] IMPLICIT OCTET STRING */
    AsnBool* initially_available; /* [65] IMPLICIT BOOLEAN DEFAULT TRUE */
    AsnInt* program_connection_tag; /* [66] IMPLICIT INTEGER OPTIONAL */
} RemoteProgramClass;

AsnLen BEncRemoteProgramClassContent PROTO ((BUF_TYPE b, RemoteProgramClass *v));

void BDecRemoteProgramClassContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, RemoteProgramClass *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct ProgramClass InterchangedProgramClass; /* ProgramClass (WITH COMPONENTS
{
    ...,
    original-content  PRESENT
}) */

#define BEncInterchangedProgramClassContent BEncProgramClassContent

#define BDecInterchangedProgramClassContent BDecProgramClassContent




typedef struct OriginalValue /* CHOICE */
{
    enum OriginalValueChoiceId
    {
        ORIGINALVALUE_BOOLEAN,
        ORIGINALVALUE_INTEGER,
        ORIGINALVALUE_OCTETSTRING,
        ORIGINALVALUE_OBJECT_REFERENCE,
        ORIGINALVALUE_CONTENT_REFERENCE
    } choiceId;
    union OriginalValueChoiceUnion
    {
    AsnBool boolean; /* BOOLEAN */
    AsnInt integer; /* INTEGER */
    AsnOcts* octetstring; /* OCTET STRING */
    struct ObjectReference* object_reference; /* [68] ObjectReference */
    ContentReference* content_reference; /* [69] IMPLICIT ContentReference */
    } a;
} OriginalValue;

AsnLen BEncOriginalValueContent PROTO ((BUF_TYPE b, OriginalValue *v));

void BDecOriginalValueContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, OriginalValue *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct VisibleClass /* SET */
{
    RootClass* rootClass; /* RootClass (WITH COMPONENTS
{
    ...,
    external-reference (WITH COMPONENTS
    {
        ...,
        object-number (1..MAX)
    })
}) */
    AsnBool* initially_active; /* [56] IMPLICIT BOOLEAN DEFAULT TRUE */
    AsnInt* content_hook; /* [57] IMPLICIT INTEGER OPTIONAL */
    struct ContentBody* original_content; /* [58] ContentBody OPTIONAL */
    AsnBool* shared; /* [59] IMPLICIT BOOLEAN DEFAULT FALSE */
    struct OriginalBoxSize* original_box_size; /* [76] IMPLICIT OriginalBoxSize */
    struct XYPosition* original_position; /* [77] IMPLICIT XYPosition DEFAULT -- snacc warning: can't parse this value yet --{ x-position 0, y-position 0} */
    struct ObjectReference* original_palette_ref; /* [78] ObjectReference OPTIONAL */
} VisibleClass;

AsnLen BEncVisibleClassContent PROTO ((BUF_TYPE b, VisibleClass *v));

void BDecVisibleClassContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, VisibleClass *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct BitmapClass /* SET */
{
    RootClass* rootClass; /* RootClass (WITH COMPONENTS
{
    ...,
    external-reference (WITH COMPONENTS
    {
        ...,
        object-number (1..MAX)
    })
}) */
    AsnBool* initially_active; /* [56] IMPLICIT BOOLEAN DEFAULT TRUE */
    AsnInt* content_hook; /* [57] IMPLICIT INTEGER OPTIONAL */
    struct ContentBody* original_content; /* [58] ContentBody OPTIONAL */
    AsnBool* shared; /* [59] IMPLICIT BOOLEAN DEFAULT FALSE */
    struct OriginalBoxSize* original_box_size; /* [76] IMPLICIT OriginalBoxSize */
    struct XYPosition* original_position; /* [77] IMPLICIT XYPosition DEFAULT -- snacc warning: can't parse this value yet --{ x-position 0, y-position 0} */
    struct ObjectReference* original_palette_ref; /* [78] ObjectReference OPTIONAL */
    AsnBool* tiling; /* [79] IMPLICIT BOOLEAN DEFAULT FALSE */
    AsnInt* original_transparency; /* [80] IMPLICIT INTEGER (0..100) DEFAULT 0 */
} BitmapClass;

AsnLen BEncBitmapClassContent PROTO ((BUF_TYPE b, BitmapClass *v));

void BDecBitmapClassContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, BitmapClass *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct LineArtClass /* SET */
{
    RootClass* rootClass; /* RootClass (WITH COMPONENTS
{
    ...,
    external-reference (WITH COMPONENTS
    {
        ...,
        object-number (1..MAX)
    })
}) */
    AsnBool* initially_active; /* [56] IMPLICIT BOOLEAN DEFAULT TRUE */
    AsnInt* content_hook; /* [57] IMPLICIT INTEGER OPTIONAL */
    struct ContentBody* original_content; /* [58] ContentBody OPTIONAL */
    AsnBool* shared; /* [59] IMPLICIT BOOLEAN DEFAULT FALSE */
    struct OriginalBoxSize* original_box_size; /* [76] IMPLICIT OriginalBoxSize */
    struct XYPosition* original_position; /* [77] IMPLICIT XYPosition DEFAULT -- snacc warning: can't parse this value yet --{ x-position 0, y-position 0} */
    struct ObjectReference* original_palette_ref; /* [78] ObjectReference OPTIONAL */
    AsnBool* bordered_bounding_box; /* [81] IMPLICIT BOOLEAN DEFAULT TRUE */
    AsnInt* original_line_width; /* [82] IMPLICIT INTEGER DEFAULT 1 */
    LineArtClassInt* original_line_style; /* [83] IMPLICIT LineArtClassInt DEFAULT solid */
    struct Colour* original_ref_line_colour; /* [84] Colour OPTIONAL */
    struct Colour* original_ref_fill_colour; /* [85] Colour OPTIONAL */
} LineArtClass;

AsnLen BEncLineArtClassContent PROTO ((BUF_TYPE b, LineArtClass *v));

void BDecLineArtClassContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, LineArtClass *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct LineArtClass RectangleClass; /* LineArtClass (WITH COMPONENTS
{
    ...,
    content-hook  ABSENT,
    original-content  ABSENT,
    bordered-bounding-box  ABSENT
}) */

#define BEncRectangleClassContent BEncLineArtClassContent

#define BDecRectangleClassContent BDecLineArtClassContent




typedef struct LineArtClass DynamicLineArtClass; /* LineArtClass (WITH COMPONENTS
{
    ...,
    content-hook  ABSENT,
    original-content  ABSENT
}) */

#define BEncDynamicLineArtClassContent BEncLineArtClassContent

#define BDecDynamicLineArtClassContent BDecLineArtClassContent




typedef struct TextClass /* SET */
{
    RootClass* rootClass; /* RootClass (WITH COMPONENTS
{
    ...,
    external-reference (WITH COMPONENTS
    {
        ...,
        object-number (1..MAX)
    })
}) */
    AsnBool* initially_active; /* [56] IMPLICIT BOOLEAN DEFAULT TRUE */
    AsnInt* content_hook; /* [57] IMPLICIT INTEGER OPTIONAL */
    struct ContentBody* original_content; /* [58] ContentBody OPTIONAL */
    AsnBool* shared; /* [59] IMPLICIT BOOLEAN DEFAULT FALSE */
    struct OriginalBoxSize* original_box_size; /* [76] IMPLICIT OriginalBoxSize */
    struct XYPosition* original_position; /* [77] IMPLICIT XYPosition DEFAULT -- snacc warning: can't parse this value yet --{ x-position 0, y-position 0} */
    struct ObjectReference* original_palette_ref; /* [78] ObjectReference OPTIONAL */
    struct FontBody* original_font; /* [86] FontBody OPTIONAL */
    AsnOcts font_attributes; /* [43] IMPLICIT OCTET STRING OPTIONAL */
    struct Colour* text_colour; /* [41] Colour OPTIONAL */
    struct Colour* background_colour; /* [39] Colour OPTIONAL */
    AsnInt* character_set; /* [38] IMPLICIT INTEGER OPTIONAL */
    Justification* horizontal_justification; /* [87] IMPLICIT Justification DEFAULT start */
    Justification* vertical_justification; /* [88] IMPLICIT Justification DEFAULT start */
    LineOrientation* line_orientation; /* [89] IMPLICIT LineOrientation DEFAULT horizontal */
    StartCorner* start_corner; /* [90] IMPLICIT StartCorner DEFAULT upper-left */
    AsnBool* text_wrapping; /* [91] IMPLICIT BOOLEAN DEFAULT FALSE */
} TextClass;

AsnLen BEncTextClassContent PROTO ((BUF_TYPE b, TextClass *v));

void BDecTextClassContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TextClass *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct AudioClass /* SET */
{
    RootClass* rootClass; /* RootClass (WITH COMPONENTS
{
    ...,
    external-reference (WITH COMPONENTS
    {
        ...,
        object-number (1..MAX)
    })
}) */
    AsnBool* initially_active; /* [56] IMPLICIT BOOLEAN DEFAULT TRUE */
    AsnInt* content_hook; /* [57] IMPLICIT INTEGER OPTIONAL */
    struct ContentBody* original_content; /* [58] ContentBody OPTIONAL */
    AsnBool* shared; /* [59] IMPLICIT BOOLEAN DEFAULT FALSE */
    AsnInt component_tag; /* [98] IMPLICIT INTEGER */
    AsnInt* original_volume; /* [99] IMPLICIT INTEGER DEFAULT 0 */
} AudioClass;

AsnLen BEncAudioClassContent PROTO ((BUF_TYPE b, AudioClass *v));

void BDecAudioClassContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, AudioClass *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct VideoClass /* SET */
{
    RootClass* rootClass; /* RootClass (WITH COMPONENTS
{
    ...,
    external-reference (WITH COMPONENTS
    {
        ...,
        object-number (1..MAX)
    })
}) */
    AsnBool* initially_active; /* [56] IMPLICIT BOOLEAN DEFAULT TRUE */
    AsnInt* content_hook; /* [57] IMPLICIT INTEGER OPTIONAL */
    struct ContentBody* original_content; /* [58] ContentBody OPTIONAL */
    AsnBool* shared; /* [59] IMPLICIT BOOLEAN DEFAULT FALSE */
    struct OriginalBoxSize* original_box_size; /* [76] IMPLICIT OriginalBoxSize */
    struct XYPosition* original_position; /* [77] IMPLICIT XYPosition DEFAULT -- snacc warning: can't parse this value yet --{ x-position 0, y-position 0} */
    struct ObjectReference* original_palette_ref; /* [78] ObjectReference OPTIONAL */
    AsnInt component_tag; /* [98] IMPLICIT INTEGER */
    Termination* termination; /* [100] IMPLICIT Termination DEFAULT disappear */
} VideoClass;

AsnLen BEncVideoClassContent PROTO ((BUF_TYPE b, VideoClass *v));

void BDecVideoClassContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, VideoClass *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct RTGraphicsClass /* SET */
{
    RootClass* rootClass; /* RootClass (WITH COMPONENTS
{
    ...,
    external-reference (WITH COMPONENTS
    {
        ...,
        object-number (1..MAX)
    })
}) */
    AsnBool* initially_active; /* [56] IMPLICIT BOOLEAN DEFAULT TRUE */
    AsnInt* content_hook; /* [57] IMPLICIT INTEGER OPTIONAL */
    struct ContentBody* original_content; /* [58] ContentBody OPTIONAL */
    AsnBool* shared; /* [59] IMPLICIT BOOLEAN DEFAULT FALSE */
    struct OriginalBoxSize* original_box_size; /* [76] IMPLICIT OriginalBoxSize */
    struct XYPosition* original_position; /* [77] IMPLICIT XYPosition DEFAULT -- snacc warning: can't parse this value yet --{ x-position 0, y-position 0} */
    struct ObjectReference* original_palette_ref; /* [78] ObjectReference OPTIONAL */
    AsnInt component_tag; /* [98] IMPLICIT INTEGER */
    Termination* termination; /* [100] IMPLICIT Termination DEFAULT disappear */
} RTGraphicsClass;

AsnLen BEncRTGraphicsClassContent PROTO ((BUF_TYPE b, RTGraphicsClass *v));

void BDecRTGraphicsClassContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, RTGraphicsClass *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SliderClass /* SET */
{
    RootClass* rootClass; /* RootClass (WITH COMPONENTS
{
    ...,
    external-reference (WITH COMPONENTS
    {
        ...,
        object-number (1..MAX)
    })
}) */
    AsnBool* initially_active; /* [56] IMPLICIT BOOLEAN DEFAULT TRUE */
    AsnInt* content_hook; /* [57] IMPLICIT INTEGER OPTIONAL */
    struct ContentBody* original_content; /* [58] ContentBody OPTIONAL */
    AsnBool* shared; /* [59] IMPLICIT BOOLEAN DEFAULT FALSE */
    struct OriginalBoxSize* original_box_size; /* [76] IMPLICIT OriginalBoxSize */
    struct XYPosition* original_position; /* [77] IMPLICIT XYPosition DEFAULT -- snacc warning: can't parse this value yet --{ x-position 0, y-position 0} */
    struct ObjectReference* original_palette_ref; /* [78] ObjectReference OPTIONAL */
    AsnBool* engine_resp; /* [101] IMPLICIT BOOLEAN DEFAULT TRUE */
    struct Colour* highlight_ref_colour; /* [49] Colour OPTIONAL */
    Orientation orientation; /* [102] IMPLICIT Orientation */
    AsnInt max_value; /* [103] IMPLICIT INTEGER */
    AsnInt* min_value; /* [104] IMPLICIT INTEGER DEFAULT 1 */
    AsnInt* initial_value; /* [105] IMPLICIT INTEGER OPTIONAL */
    AsnInt* initial_portion; /* [106] IMPLICIT INTEGER OPTIONAL */
    AsnInt* step_size; /* [107] IMPLICIT INTEGER DEFAULT 1 */
    SliderStyle* slider_style; /* [108] IMPLICIT SliderStyle DEFAULT normal */
    struct Colour* slider_ref_colour; /* [50] Colour OPTIONAL */
} SliderClass;

AsnLen BEncSliderClassContent PROTO ((BUF_TYPE b, SliderClass *v));

void BDecSliderClassContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SliderClass *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct EntryFieldClass /* SET */
{
    RootClass* rootClass; /* RootClass (WITH COMPONENTS
{
    ...,
    external-reference (WITH COMPONENTS
    {
        ...,
        object-number (1..MAX)
    })
}) */
    AsnBool* initially_active; /* [56] IMPLICIT BOOLEAN DEFAULT TRUE */
    AsnInt* content_hook; /* [57] IMPLICIT INTEGER OPTIONAL */
    struct ContentBody* original_content; /* [58] ContentBody OPTIONAL */
    AsnBool* shared; /* [59] IMPLICIT BOOLEAN DEFAULT FALSE */
    struct OriginalBoxSize* original_box_size; /* [76] IMPLICIT OriginalBoxSize */
    struct XYPosition* original_position; /* [77] IMPLICIT XYPosition DEFAULT -- snacc warning: can't parse this value yet --{ x-position 0, y-position 0} */
    struct ObjectReference* original_palette_ref; /* [78] ObjectReference OPTIONAL */
    struct FontBody* original_font; /* [86] FontBody OPTIONAL */
    AsnOcts font_attributes; /* [43] IMPLICIT OCTET STRING OPTIONAL */
    struct Colour* text_colour; /* [41] Colour OPTIONAL */
    struct Colour* background_colour; /* [39] Colour OPTIONAL */
    AsnInt* character_set; /* [38] IMPLICIT INTEGER OPTIONAL */
    Justification* horizontal_justification; /* [87] IMPLICIT Justification DEFAULT start */
    Justification* vertical_justification; /* [88] IMPLICIT Justification DEFAULT start */
    LineOrientation* line_orientation; /* [89] IMPLICIT LineOrientation DEFAULT horizontal */
    StartCorner* start_corner; /* [90] IMPLICIT StartCorner DEFAULT upper-left */
    AsnBool* text_wrapping; /* [91] IMPLICIT BOOLEAN DEFAULT FALSE */
    AsnBool* engine_resp; /* [101] IMPLICIT BOOLEAN DEFAULT TRUE */
    struct Colour* highlight_ref_colour; /* [49] Colour OPTIONAL */
    InputType* input_type; /* [109] IMPLICIT InputType DEFAULT any */
    AsnOcts char_list; /* [110] IMPLICIT OCTET STRING OPTIONAL */
    AsnBool* obscured_input; /* [111] IMPLICIT BOOLEAN DEFAULT FALSE */
    AsnInt* max_length; /* [112] IMPLICIT INTEGER DEFAULT 0 */
} EntryFieldClass;

AsnLen BEncEntryFieldClassContent PROTO ((BUF_TYPE b, EntryFieldClass *v));

void BDecEntryFieldClassContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, EntryFieldClass *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct HyperTextClass /* SET */
{
    RootClass* rootClass; /* RootClass (WITH COMPONENTS
{
    ...,
    external-reference (WITH COMPONENTS
    {
        ...,
        object-number (1..MAX)
    })
}) */
    AsnBool* initially_active; /* [56] IMPLICIT BOOLEAN DEFAULT TRUE */
    AsnInt* content_hook; /* [57] IMPLICIT INTEGER OPTIONAL */
    struct ContentBody* original_content; /* [58] ContentBody OPTIONAL */
    AsnBool* shared; /* [59] IMPLICIT BOOLEAN DEFAULT FALSE */
    struct OriginalBoxSize* original_box_size; /* [76] IMPLICIT OriginalBoxSize */
    struct XYPosition* original_position; /* [77] IMPLICIT XYPosition DEFAULT -- snacc warning: can't parse this value yet --{ x-position 0, y-position 0} */
    struct ObjectReference* original_palette_ref; /* [78] ObjectReference OPTIONAL */
    struct FontBody* original_font; /* [86] FontBody OPTIONAL */
    AsnOcts font_attributes; /* [43] IMPLICIT OCTET STRING OPTIONAL */
    struct Colour* text_colour; /* [41] Colour OPTIONAL */
    struct Colour* background_colour; /* [39] Colour OPTIONAL */
    AsnInt* character_set; /* [38] IMPLICIT INTEGER OPTIONAL */
    Justification* horizontal_justification; /* [87] IMPLICIT Justification DEFAULT start */
    Justification* vertical_justification; /* [88] IMPLICIT Justification DEFAULT start */
    LineOrientation* line_orientation; /* [89] IMPLICIT LineOrientation DEFAULT horizontal */
    StartCorner* start_corner; /* [90] IMPLICIT StartCorner DEFAULT upper-left */
    AsnBool* text_wrapping; /* [91] IMPLICIT BOOLEAN DEFAULT FALSE */
    AsnBool* engine_resp; /* [101] IMPLICIT BOOLEAN DEFAULT TRUE */
    struct Colour* highlight_ref_colour; /* [49] Colour OPTIONAL */
} HyperTextClass;

AsnLen BEncHyperTextClassContent PROTO ((BUF_TYPE b, HyperTextClass *v));

void BDecHyperTextClassContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, HyperTextClass *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct ButtonClass /* SET */
{
    RootClass* rootClass; /* RootClass (WITH COMPONENTS
{
    ...,
    external-reference (WITH COMPONENTS
    {
        ...,
        object-number (1..MAX)
    })
}) */
    AsnBool* initially_active; /* [56] IMPLICIT BOOLEAN DEFAULT TRUE */
    AsnInt* content_hook; /* [57] IMPLICIT INTEGER OPTIONAL */
    struct ContentBody* original_content; /* [58] ContentBody OPTIONAL */
    AsnBool* shared; /* [59] IMPLICIT BOOLEAN DEFAULT FALSE */
    struct OriginalBoxSize* original_box_size; /* [76] IMPLICIT OriginalBoxSize */
    struct XYPosition* original_position; /* [77] IMPLICIT XYPosition DEFAULT -- snacc warning: can't parse this value yet --{ x-position 0, y-position 0} */
    struct ObjectReference* original_palette_ref; /* [78] ObjectReference OPTIONAL */
    AsnBool* engine_resp; /* [101] IMPLICIT BOOLEAN DEFAULT TRUE */
    struct Colour* highlight_ref_colour; /* [49] Colour OPTIONAL */
    struct Colour* button_ref_colour; /* [48] Colour OPTIONAL */
} ButtonClass;

AsnLen BEncButtonClassContent PROTO ((BUF_TYPE b, ButtonClass *v));

void BDecButtonClassContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ButtonClass *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct ButtonClass HotspotClass; /* ButtonClass */

#define BEncHotspotClassContent BEncButtonClassContent

#define BDecHotspotClassContent BDecButtonClassContent




typedef struct PushButtonClass /* SET */
{
    RootClass* rootClass; /* RootClass (WITH COMPONENTS
{
    ...,
    external-reference (WITH COMPONENTS
    {
        ...,
        object-number (1..MAX)
    })
}) */
    AsnBool* initially_active; /* [56] IMPLICIT BOOLEAN DEFAULT TRUE */
    AsnInt* content_hook; /* [57] IMPLICIT INTEGER OPTIONAL */
    struct ContentBody* original_content; /* [58] ContentBody OPTIONAL */
    AsnBool* shared; /* [59] IMPLICIT BOOLEAN DEFAULT FALSE */
    struct OriginalBoxSize* original_box_size; /* [76] IMPLICIT OriginalBoxSize */
    struct XYPosition* original_position; /* [77] IMPLICIT XYPosition DEFAULT -- snacc warning: can't parse this value yet --{ x-position 0, y-position 0} */
    struct ObjectReference* original_palette_ref; /* [78] ObjectReference OPTIONAL */
    AsnBool* engine_resp; /* [101] IMPLICIT BOOLEAN DEFAULT TRUE */
    struct Colour* highlight_ref_colour; /* [49] Colour OPTIONAL */
    struct Colour* button_ref_colour; /* [48] Colour OPTIONAL */
    AsnOcts original_label; /* [113] IMPLICIT OCTET STRING OPTIONAL */
    AsnInt* character_set; /* [38] IMPLICIT INTEGER OPTIONAL */
} PushButtonClass;

AsnLen BEncPushButtonClassContent PROTO ((BUF_TYPE b, PushButtonClass *v));

void BDecPushButtonClassContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, PushButtonClass *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SwitchButtonClass /* SET */
{
    RootClass* rootClass; /* RootClass (WITH COMPONENTS
{
    ...,
    external-reference (WITH COMPONENTS
    {
        ...,
        object-number (1..MAX)
    })
}) */
    AsnBool* initially_active; /* [56] IMPLICIT BOOLEAN DEFAULT TRUE */
    AsnInt* content_hook; /* [57] IMPLICIT INTEGER OPTIONAL */
    struct ContentBody* original_content; /* [58] ContentBody OPTIONAL */
    AsnBool* shared; /* [59] IMPLICIT BOOLEAN DEFAULT FALSE */
    struct OriginalBoxSize* original_box_size; /* [76] IMPLICIT OriginalBoxSize */
    struct XYPosition* original_position; /* [77] IMPLICIT XYPosition DEFAULT -- snacc warning: can't parse this value yet --{ x-position 0, y-position 0} */
    struct ObjectReference* original_palette_ref; /* [78] ObjectReference OPTIONAL */
    AsnBool* engine_resp; /* [101] IMPLICIT BOOLEAN DEFAULT TRUE */
    struct Colour* highlight_ref_colour; /* [49] Colour OPTIONAL */
    struct Colour* button_ref_colour; /* [48] Colour OPTIONAL */
    AsnOcts original_label; /* [113] IMPLICIT OCTET STRING OPTIONAL */
    AsnInt* character_set; /* [38] IMPLICIT INTEGER OPTIONAL */
    ButtonStyle button_style; /* [114] IMPLICIT ButtonStyle */
} SwitchButtonClass;

AsnLen BEncSwitchButtonClassContent PROTO ((BUF_TYPE b, SwitchButtonClass *v));

void BDecSwitchButtonClassContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SwitchButtonClass *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct Add /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* value; /* GenericInteger */
} Add;

AsnLen BEncAddContent PROTO ((BUF_TYPE b, Add *v));

void BDecAddContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, Add *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct AddItem /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* item_index; /* GenericInteger */
    struct GenericObjectReference* visible_reference; /* GenericObjectReference */
} AddItem;

AsnLen BEncAddItemContent PROTO ((BUF_TYPE b, AddItem *v));

void BDecAddItemContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, AddItem *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct Append /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericOctetString* append_value; /* GenericOctetString */
} Append;

AsnLen BEncAppendContent PROTO ((BUF_TYPE b, Append *v));

void BDecAppendContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, Append *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct CallActionSlot /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* index; /* GenericInteger */
} CallActionSlot;

AsnLen BEncCallActionSlotContent PROTO ((BUF_TYPE b, CallActionSlot *v));

void BDecCallActionSlotContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, CallActionSlot *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct Clone /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* clone_ref_var; /* ObjectReference */
} Clone;

AsnLen BEncCloneContent PROTO ((BUF_TYPE b, Clone *v));

void BDecCloneContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, Clone *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct CloseConnection /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* connection_tag; /* GenericInteger */
} CloseConnection;

AsnLen BEncCloseConnectionContent PROTO ((BUF_TYPE b, CloseConnection *v));

void BDecCloseConnectionContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, CloseConnection *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct DelItem /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericObjectReference* visible_reference; /* GenericObjectReference */
} DelItem;

AsnLen BEncDelItemContent PROTO ((BUF_TYPE b, DelItem *v));

void BDecDelItemContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, DelItem *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct DeselectItem /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* item_index; /* GenericInteger */
} DeselectItem;

AsnLen BEncDeselectItemContent PROTO ((BUF_TYPE b, DeselectItem *v));

void BDecDeselectItemContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, DeselectItem *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct Divide /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* value; /* GenericInteger */
} Divide;

AsnLen BEncDivideContent PROTO ((BUF_TYPE b, Divide *v));

void BDecDivideContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, Divide *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct DrawArc /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* x; /* GenericInteger */
    struct GenericInteger* y; /* GenericInteger */
    struct GenericInteger* ellipse_width; /* GenericInteger */
    struct GenericInteger* ellipse_height; /* GenericInteger */
    struct GenericInteger* start_angle; /* GenericInteger */
    struct GenericInteger* arc_angle; /* GenericInteger */
} DrawArc;

AsnLen BEncDrawArcContent PROTO ((BUF_TYPE b, DrawArc *v));

void BDecDrawArcContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, DrawArc *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct DrawLine /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* x1; /* GenericInteger */
    struct GenericInteger* y1; /* GenericInteger */
    struct GenericInteger* x2; /* GenericInteger */
    struct GenericInteger* y2; /* GenericInteger */
} DrawLine;

AsnLen BEncDrawLineContent PROTO ((BUF_TYPE b, DrawLine *v));

void BDecDrawLineContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, DrawLine *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct DrawOval /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* x; /* GenericInteger */
    struct GenericInteger* y; /* GenericInteger */
    struct GenericInteger* ellipse_width; /* GenericInteger */
    struct GenericInteger* ellipse_height; /* GenericInteger */
} DrawOval;

AsnLen BEncDrawOvalContent PROTO ((BUF_TYPE b, DrawOval *v));

void BDecDrawOvalContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, DrawOval *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct DrawRectangle /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* x1; /* GenericInteger */
    struct GenericInteger* y1; /* GenericInteger */
    struct GenericInteger* x2; /* GenericInteger */
    struct GenericInteger* y2; /* GenericInteger */
} DrawRectangle;

AsnLen BEncDrawRectangleContent PROTO ((BUF_TYPE b, DrawRectangle *v));

void BDecDrawRectangleContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, DrawRectangle *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct DrawSector /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* x; /* GenericInteger */
    struct GenericInteger* y; /* GenericInteger */
    struct GenericInteger* ellipse_width; /* GenericInteger */
    struct GenericInteger* ellipse_height; /* GenericInteger */
    struct GenericInteger* start_angle; /* GenericInteger */
    struct GenericInteger* arc_angle; /* GenericInteger */
} DrawSector;

AsnLen BEncDrawSectorContent PROTO ((BUF_TYPE b, DrawSector *v));

void BDecDrawSectorContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, DrawSector *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GetAvailabilityStatus /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* availability_status_var; /* ObjectReference */
} GetAvailabilityStatus;

AsnLen BEncGetAvailabilityStatusContent PROTO ((BUF_TYPE b, GetAvailabilityStatus *v));

void BDecGetAvailabilityStatusContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GetAvailabilityStatus *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GetBoxSize /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* x_box_size_var; /* ObjectReference */
    struct ObjectReference* y_box_size_var; /* ObjectReference */
} GetBoxSize;

AsnLen BEncGetBoxSizeContent PROTO ((BUF_TYPE b, GetBoxSize *v));

void BDecGetBoxSizeContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GetBoxSize *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GetCellItem /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* cell_index; /* GenericInteger */
    struct ObjectReference* item_ref_var; /* ObjectReference */
} GetCellItem;

AsnLen BEncGetCellItemContent PROTO ((BUF_TYPE b, GetCellItem *v));

void BDecGetCellItemContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GetCellItem *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GetCursorPosition /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* x_out; /* ObjectReference */
    struct ObjectReference* y_out; /* ObjectReference */
} GetCursorPosition;

AsnLen BEncGetCursorPositionContent PROTO ((BUF_TYPE b, GetCursorPosition *v));

void BDecGetCursorPositionContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GetCursorPosition *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GetEngineSupport /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericOctetString* feature; /* GenericOctetString */
    struct ObjectReference* answer; /* ObjectReference */
} GetEngineSupport;

AsnLen BEncGetEngineSupportContent PROTO ((BUF_TYPE b, GetEngineSupport *v));

void BDecGetEngineSupportContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GetEngineSupport *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GetEntryPoint /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* entry_point_var; /* ObjectReference */
} GetEntryPoint;

AsnLen BEncGetEntryPointContent PROTO ((BUF_TYPE b, GetEntryPoint *v));

void BDecGetEntryPointContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GetEntryPoint *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GetFillColour /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* fill_colour_var; /* ObjectReference */
} GetFillColour;

AsnLen BEncGetFillColourContent PROTO ((BUF_TYPE b, GetFillColour *v));

void BDecGetFillColourContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GetFillColour *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GetFirstItem /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* first_item_var; /* ObjectReference */
} GetFirstItem;

AsnLen BEncGetFirstItemContent PROTO ((BUF_TYPE b, GetFirstItem *v));

void BDecGetFirstItemContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GetFirstItem *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GetHighlightStatus /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* highlight_status_var; /* ObjectReference */
} GetHighlightStatus;

AsnLen BEncGetHighlightStatusContent PROTO ((BUF_TYPE b, GetHighlightStatus *v));

void BDecGetHighlightStatusContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GetHighlightStatus *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GetInteractionStatus /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* interaction_status_var; /* ObjectReference */
} GetInteractionStatus;

AsnLen BEncGetInteractionStatusContent PROTO ((BUF_TYPE b, GetInteractionStatus *v));

void BDecGetInteractionStatusContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GetInteractionStatus *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GetItemStatus /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* item_index; /* GenericInteger */
    struct ObjectReference* item_status_var; /* ObjectReference */
} GetItemStatus;

AsnLen BEncGetItemStatusContent PROTO ((BUF_TYPE b, GetItemStatus *v));

void BDecGetItemStatusContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GetItemStatus *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GetLabel /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* label_var; /* ObjectReference */
} GetLabel;

AsnLen BEncGetLabelContent PROTO ((BUF_TYPE b, GetLabel *v));

void BDecGetLabelContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GetLabel *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GetLastAnchorFired /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* last_anchor_fired_var; /* ObjectReference */
} GetLastAnchorFired;

AsnLen BEncGetLastAnchorFiredContent PROTO ((BUF_TYPE b, GetLastAnchorFired *v));

void BDecGetLastAnchorFiredContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GetLastAnchorFired *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GetLineColour /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* line_colour_var; /* ObjectReference */
} GetLineColour;

AsnLen BEncGetLineColourContent PROTO ((BUF_TYPE b, GetLineColour *v));

void BDecGetLineColourContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GetLineColour *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GetLineStyle /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* line_style_var; /* ObjectReference */
} GetLineStyle;

AsnLen BEncGetLineStyleContent PROTO ((BUF_TYPE b, GetLineStyle *v));

void BDecGetLineStyleContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GetLineStyle *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GetLineWidth /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* line_width_var; /* ObjectReference */
} GetLineWidth;

AsnLen BEncGetLineWidthContent PROTO ((BUF_TYPE b, GetLineWidth *v));

void BDecGetLineWidthContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GetLineWidth *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GetListItem /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* item_index; /* GenericInteger */
    struct ObjectReference* item_ref_var; /* ObjectReference */
} GetListItem;

AsnLen BEncGetListItemContent PROTO ((BUF_TYPE b, GetListItem *v));

void BDecGetListItemContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GetListItem *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GetListSize /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* size_var; /* ObjectReference */
} GetListSize;

AsnLen BEncGetListSizeContent PROTO ((BUF_TYPE b, GetListSize *v));

void BDecGetListSizeContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GetListSize *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GetOverwriteMode /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* overwrite_mode_var; /* ObjectReference */
} GetOverwriteMode;

AsnLen BEncGetOverwriteModeContent PROTO ((BUF_TYPE b, GetOverwriteMode *v));

void BDecGetOverwriteModeContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GetOverwriteMode *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GetPortion /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* portion_var; /* ObjectReference */
} GetPortion;

AsnLen BEncGetPortionContent PROTO ((BUF_TYPE b, GetPortion *v));

void BDecGetPortionContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GetPortion *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GetPosition /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* x_position_var; /* ObjectReference */
    struct ObjectReference* y_position_var; /* ObjectReference */
} GetPosition;

AsnLen BEncGetPositionContent PROTO ((BUF_TYPE b, GetPosition *v));

void BDecGetPositionContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GetPosition *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GetRunningStatus /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* running_status_var; /* ObjectReference */
} GetRunningStatus;

AsnLen BEncGetRunningStatusContent PROTO ((BUF_TYPE b, GetRunningStatus *v));

void BDecGetRunningStatusContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GetRunningStatus *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GetSelectionStatus /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* selection_status_var; /* ObjectReference */
} GetSelectionStatus;

AsnLen BEncGetSelectionStatusContent PROTO ((BUF_TYPE b, GetSelectionStatus *v));

void BDecGetSelectionStatusContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GetSelectionStatus *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GetSliderValue /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* slider_value_var; /* ObjectReference */
} GetSliderValue;

AsnLen BEncGetSliderValueContent PROTO ((BUF_TYPE b, GetSliderValue *v));

void BDecGetSliderValueContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GetSliderValue *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GetTextContent /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* text_content_var; /* ObjectReference */
} GetTextContent;

AsnLen BEncGetTextContentContent PROTO ((BUF_TYPE b, GetTextContent *v));

void BDecGetTextContentContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GetTextContent *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GetTextData /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* text_data_var; /* ObjectReference */
} GetTextData;

AsnLen BEncGetTextDataContent PROTO ((BUF_TYPE b, GetTextData *v));

void BDecGetTextDataContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GetTextData *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GetTokenPosition /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* token_position_var; /* ObjectReference */
} GetTokenPosition;

AsnLen BEncGetTokenPositionContent PROTO ((BUF_TYPE b, GetTokenPosition *v));

void BDecGetTokenPositionContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GetTokenPosition *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GetVolume /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* volume_var; /* ObjectReference */
} GetVolume;

AsnLen BEncGetVolumeContent PROTO ((BUF_TYPE b, GetVolume *v));

void BDecGetVolumeContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GetVolume *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct Modulo /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* value; /* GenericInteger */
} Modulo;

AsnLen BEncModuloContent PROTO ((BUF_TYPE b, Modulo *v));

void BDecModuloContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, Modulo *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct Move /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* movement_identifier; /* GenericInteger */
} Move;

AsnLen BEncMoveContent PROTO ((BUF_TYPE b, Move *v));

void BDecMoveContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, Move *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct MoveTo /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* index; /* GenericInteger */
} MoveTo;

AsnLen BEncMoveToContent PROTO ((BUF_TYPE b, MoveTo *v));

void BDecMoveToContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, MoveTo *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct Multiply /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* value; /* GenericInteger */
} Multiply;

AsnLen BEncMultiplyContent PROTO ((BUF_TYPE b, Multiply *v));

void BDecMultiplyContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, Multiply *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct OpenConnection /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* open_succeeded; /* ObjectReference */
    struct GenericOctetString* protocol; /* GenericOctetString */
    struct GenericOctetString* address; /* GenericOctetString */
    struct GenericInteger* connection_tag; /* GenericInteger */
} OpenConnection;

AsnLen BEncOpenConnectionContent PROTO ((BUF_TYPE b, OpenConnection *v));

void BDecOpenConnectionContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, OpenConnection *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct PutBefore /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericObjectReference* reference_visible; /* GenericObjectReference */
} PutBefore;

AsnLen BEncPutBeforeContent PROTO ((BUF_TYPE b, PutBefore *v));

void BDecPutBeforeContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, PutBefore *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct PutBehind /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericObjectReference* reference_visible; /* GenericObjectReference */
} PutBehind;

AsnLen BEncPutBehindContent PROTO ((BUF_TYPE b, PutBehind *v));

void BDecPutBehindContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, PutBehind *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct ReadPersistent /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* read_succeeded; /* ObjectReference */
    ReadPersistentSeqOf* out_variables; /* ReadPersistentSeqOf SIZE (1..MAX) */
    struct GenericOctetString* in_file_name; /* GenericOctetString */
} ReadPersistent;

AsnLen BEncReadPersistentContent PROTO ((BUF_TYPE b, ReadPersistent *v));

void BDecReadPersistentContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ReadPersistent *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct ScaleBitmap /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* x_scale; /* GenericInteger */
    struct GenericInteger* y_scale; /* GenericInteger */
} ScaleBitmap;

AsnLen BEncScaleBitmapContent PROTO ((BUF_TYPE b, ScaleBitmap *v));

void BDecScaleBitmapContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ScaleBitmap *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct ScaleVideo /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* x_scale; /* GenericInteger */
    struct GenericInteger* y_scale; /* GenericInteger */
} ScaleVideo;

AsnLen BEncScaleVideoContent PROTO ((BUF_TYPE b, ScaleVideo *v));

void BDecScaleVideoContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ScaleVideo *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct ScrollItems /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* items_to_scroll; /* GenericInteger */
} ScrollItems;

AsnLen BEncScrollItemsContent PROTO ((BUF_TYPE b, ScrollItems *v));

void BDecScrollItemsContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ScrollItems *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SelectItem /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* item_index; /* GenericInteger */
} SelectItem;

AsnLen BEncSelectItemContent PROTO ((BUF_TYPE b, SelectItem *v));

void BDecSelectItemContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SelectItem *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetBoxSize /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* x_new_box_size; /* GenericInteger */
    struct GenericInteger* y_new_box_size; /* GenericInteger */
} SetBoxSize;

AsnLen BEncSetBoxSizeContent PROTO ((BUF_TYPE b, SetBoxSize *v));

void BDecSetBoxSizeContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetBoxSize *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetCachePriority /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* new_cache_priority; /* GenericInteger */
} SetCachePriority;

AsnLen BEncSetCachePriorityContent PROTO ((BUF_TYPE b, SetCachePriority *v));

void BDecSetCachePriorityContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetCachePriority *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetCounterEndPosition /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* new_counter_end_position; /* GenericInteger */
} SetCounterEndPosition;

AsnLen BEncSetCounterEndPositionContent PROTO ((BUF_TYPE b, SetCounterEndPosition *v));

void BDecSetCounterEndPositionContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetCounterEndPosition *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetCounterPosition /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* new_counter_position; /* GenericInteger */
} SetCounterPosition;

AsnLen BEncSetCounterPositionContent PROTO ((BUF_TYPE b, SetCounterPosition *v));

void BDecSetCounterPositionContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetCounterPosition *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetCounterTrigger /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* trigger_identifier; /* GenericInteger */
    struct GenericInteger* new_counter_value; /* GenericInteger OPTIONAL */
} SetCounterTrigger;

AsnLen BEncSetCounterTriggerContent PROTO ((BUF_TYPE b, SetCounterTrigger *v));

void BDecSetCounterTriggerContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetCounterTrigger *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetCursorPosition /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* x_cursor; /* GenericInteger */
    struct GenericInteger* y_cursor; /* GenericInteger */
} SetCursorPosition;

AsnLen BEncSetCursorPositionContent PROTO ((BUF_TYPE b, SetCursorPosition *v));

void BDecSetCursorPositionContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetCursorPosition *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetCursorShape /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericObjectReference* new_cursor_shape; /* GenericObjectReference OPTIONAL */
} SetCursorShape;

AsnLen BEncSetCursorShapeContent PROTO ((BUF_TYPE b, SetCursorShape *v));

void BDecSetCursorShapeContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetCursorShape *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetEntryPoint /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* new_entry_point; /* GenericInteger */
} SetEntryPoint;

AsnLen BEncSetEntryPointContent PROTO ((BUF_TYPE b, SetEntryPoint *v));

void BDecSetEntryPointContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetEntryPoint *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetFirstItem /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* new_first_item; /* GenericInteger */
} SetFirstItem;

AsnLen BEncSetFirstItemContent PROTO ((BUF_TYPE b, SetFirstItem *v));

void BDecSetFirstItemContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetFirstItem *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetHighlightStatus /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericBoolean* new_highlight_status; /* GenericBoolean */
} SetHighlightStatus;

AsnLen BEncSetHighlightStatusContent PROTO ((BUF_TYPE b, SetHighlightStatus *v));

void BDecSetHighlightStatusContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetHighlightStatus *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetInteractionStatus /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericBoolean* new_interaction_status; /* GenericBoolean */
} SetInteractionStatus;

AsnLen BEncSetInteractionStatusContent PROTO ((BUF_TYPE b, SetInteractionStatus *v));

void BDecSetInteractionStatusContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetInteractionStatus *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetLabel /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericOctetString* new_label; /* GenericOctetString */
} SetLabel;

AsnLen BEncSetLabelContent PROTO ((BUF_TYPE b, SetLabel *v));

void BDecSetLabelContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetLabel *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetLineStyle /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* new_line_style; /* GenericInteger */
} SetLineStyle;

AsnLen BEncSetLineStyleContent PROTO ((BUF_TYPE b, SetLineStyle *v));

void BDecSetLineStyleContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetLineStyle *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetLineWidth /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* new_line_width; /* GenericInteger */
} SetLineWidth;

AsnLen BEncSetLineWidthContent PROTO ((BUF_TYPE b, SetLineWidth *v));

void BDecSetLineWidthContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetLineWidth *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetOverwriteMode /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericBoolean* new_overwrite_mode; /* GenericBoolean */
} SetOverwriteMode;

AsnLen BEncSetOverwriteModeContent PROTO ((BUF_TYPE b, SetOverwriteMode *v));

void BDecSetOverwriteModeContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetOverwriteMode *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetPaletteRef /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericObjectReference* new_palette_ref; /* GenericObjectReference */
} SetPaletteRef;

AsnLen BEncSetPaletteRefContent PROTO ((BUF_TYPE b, SetPaletteRef *v));

void BDecSetPaletteRefContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetPaletteRef *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetPortion /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* new_portion; /* GenericInteger */
} SetPortion;

AsnLen BEncSetPortionContent PROTO ((BUF_TYPE b, SetPortion *v));

void BDecSetPortionContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetPortion *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetPosition /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* new_x_position; /* GenericInteger */
    struct GenericInteger* new_y_position; /* GenericInteger */
} SetPosition;

AsnLen BEncSetPositionContent PROTO ((BUF_TYPE b, SetPosition *v));

void BDecSetPositionContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetPosition *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetSliderValue /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* new_slider_value; /* GenericInteger */
} SetSliderValue;

AsnLen BEncSetSliderValueContent PROTO ((BUF_TYPE b, SetSliderValue *v));

void BDecSetSliderValueContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetSliderValue *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct NewTimer /* SEQUENCE */
{
    struct GenericInteger* timer_value; /* GenericInteger */
    struct GenericBoolean* absolute_time; /* GenericBoolean OPTIONAL */
} NewTimer;

AsnLen BEncNewTimerContent PROTO ((BUF_TYPE b, NewTimer *v));

void BDecNewTimerContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, NewTimer *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetTransparency /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* new_transparency; /* GenericInteger */
} SetTransparency;

AsnLen BEncSetTransparencyContent PROTO ((BUF_TYPE b, SetTransparency *v));

void BDecSetTransparencyContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetTransparency *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetVolume /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* new_volume; /* GenericInteger */
} SetVolume;

AsnLen BEncSetVolumeContent PROTO ((BUF_TYPE b, SetVolume *v));

void BDecSetVolumeContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetVolume *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct Step /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* nb_of_steps; /* GenericInteger */
} Step;

AsnLen BEncStepContent PROTO ((BUF_TYPE b, Step *v));

void BDecStepContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, Step *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct StorePersistent /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* store_succeeded; /* ObjectReference */
    StorePersistentSeqOf* in_variables; /* StorePersistentSeqOf SIZE (1..MAX) */
    struct GenericOctetString* out_file_name; /* GenericOctetString */
} StorePersistent;

AsnLen BEncStorePersistentContent PROTO ((BUF_TYPE b, StorePersistent *v));

void BDecStorePersistentContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, StorePersistent *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct Subtract /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* value; /* GenericInteger */
} Subtract;

AsnLen BEncSubtractContent PROTO ((BUF_TYPE b, Subtract *v));

void BDecSubtractContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, Subtract *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct ToggleItem /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* item_index; /* GenericInteger */
} ToggleItem;

AsnLen BEncToggleItemContent PROTO ((BUF_TYPE b, ToggleItem *v));

void BDecToggleItemContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ToggleItem *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetFontAttributes /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericOctetString* new_font_attributes; /* GenericOctetString */
} SetFontAttributes;

AsnLen BEncSetFontAttributesContent PROTO ((BUF_TYPE b, SetFontAttributes *v));

void BDecSetFontAttributesContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetFontAttributes *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetInputRegister /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* new_input_register; /* GenericInteger */
} SetInputRegister;

AsnLen BEncSetInputRegisterContent PROTO ((BUF_TYPE b, SetInputRegister *v));

void BDecSetInputRegisterContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetInputRegister *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetCellPosition /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* index; /* GenericInteger */
    struct GenericInteger* new_x_position; /* GenericInteger */
    struct GenericInteger* new_y_position; /* GenericInteger */
} SetCellPosition;

AsnLen BEncSetCellPositionContent PROTO ((BUF_TYPE b, SetCellPosition *v));

void BDecSetCellPositionContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetCellPosition *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetPositionOffset /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* new_x_offset; /* GenericInteger */
    struct GenericInteger* new_y_offset; /* GenericInteger */
} SetPositionOffset;

AsnLen BEncSetPositionOffsetContent PROTO ((BUF_TYPE b, SetPositionOffset *v));

void BDecSetPositionOffsetContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetPositionOffset *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GetPositionOffset /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* x_offset_var; /* ObjectReference */
    struct ObjectReference* y_offset_var; /* ObjectReference */
} GetPositionOffset;

AsnLen BEncGetPositionOffsetContent PROTO ((BUF_TYPE b, GetPositionOffset *v));

void BDecGetPositionOffsetContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GetPositionOffset *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetFocusPosition /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* new_focus_position; /* GenericInteger */
} SetFocusPosition;

AsnLen BEncSetFocusPositionContent PROTO ((BUF_TYPE b, SetFocusPosition *v));

void BDecSetFocusPositionContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetFocusPosition *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GetFocusPosition /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* focus_position_var; /* ObjectReference */
} GetFocusPosition;

AsnLen BEncGetFocusPositionContent PROTO ((BUF_TYPE b, GetFocusPosition *v));

void BDecGetFocusPositionContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GetFocusPosition *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetSliderParameters /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* new_min_value; /* GenericInteger */
    struct GenericInteger* new_max_value; /* GenericInteger */
    struct GenericInteger* new_step_size; /* GenericInteger */
} SetSliderParameters;

AsnLen BEncSetSliderParametersContent PROTO ((BUF_TYPE b, SetSliderParameters *v));

void BDecSetSliderParametersContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetSliderParameters *v, AsnLen *bytesDecoded, ENV_TYPE env));


typedef struct SetDesktopColour /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct NewColour* new_desktop_colour; /* NewColour */
} SetDesktopColour;

AsnLen BEncSetDesktopColourContent PROTO ((BUF_TYPE b, SetDesktopColour *v));

void BDecSetDesktopColourContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetDesktopColour *v, AsnLen *bytesDecoded, ENV_TYPE env));







typedef struct ConnectionTagOrNull /* CHOICE */
{
    enum ConnectionTagOrNullChoiceId
    {
        CONNECTIONTAGORNULL_CONNECTION_TAG,
        CONNECTIONTAGORNULL_NULL
    } choiceId;
    union ConnectionTagOrNullChoiceUnion
    {
    struct GenericInteger* connection_tag; /* GenericInteger */
    AsnNull null; /* NULL */
    } a;
} ConnectionTagOrNull;

AsnLen BEncConnectionTagOrNullContent PROTO ((BUF_TYPE b, ConnectionTagOrNull *v));

void BDecConnectionTagOrNullContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ConnectionTagOrNull *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct ComparisonValue /* CHOICE */
{
    enum ComparisonValueChoiceId
    {
        COMPARISONVALUE_NEW_GENERIC_BOOLEAN,
        COMPARISONVALUE_NEW_GENERIC_INTEGER,
        COMPARISONVALUE_NEW_GENERIC_OCTETSTRING,
        COMPARISONVALUE_NEW_GENERIC_OBJECT_REFERENCE,
        COMPARISONVALUE_NEW_GENERIC_CONTENT_REFERENCE
    } choiceId;
    union ComparisonValueChoiceUnion
    {
    struct GenericBoolean* new_generic_boolean; /* [225] GenericBoolean */
    struct GenericInteger* new_generic_integer; /* [226] GenericInteger */
    struct GenericOctetString* new_generic_octetstring; /* [227] GenericOctetString */
    struct GenericObjectReference* new_generic_object_reference; /* [228] GenericObjectReference */
    struct GenericContentReference* new_generic_content_reference; /* [229] GenericContentReference */
    } a;
} ComparisonValue;

AsnLen BEncComparisonValueContent PROTO ((BUF_TYPE b, ComparisonValue *v));

void BDecComparisonValueContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ComparisonValue *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct EmulatedEventData /* CHOICE */
{
    enum EmulatedEventDataChoiceId
    {
        EMULATEDEVENTDATA_NEW_GENERIC_BOOLEAN,
        EMULATEDEVENTDATA_NEW_GENERIC_INTEGER,
        EMULATEDEVENTDATA_NEW_GENERIC_OCTET_STRING
    } choiceId;
    union EmulatedEventDataChoiceUnion
    {
    struct GenericBoolean* new_generic_boolean; /* [225] GenericBoolean */
    struct GenericInteger* new_generic_integer; /* [226] GenericInteger */
    struct GenericOctetString* new_generic_octet_string; /* [227] GenericOctetString */
    } a;
} EmulatedEventData;

AsnLen BEncEmulatedEventDataContent PROTO ((BUF_TYPE b, EmulatedEventData *v));

void BDecEmulatedEventDataContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, EmulatedEventData *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct NewColour /* CHOICE */
{
    enum NewColourChoiceId
    {
        NEWCOLOUR_NEW_COLOUR_INDEX,
        NEWCOLOUR_NEW_ABSOLUTE_COLOUR
    } choiceId;
    union NewColourChoiceUnion
    {
    struct GenericInteger* new_colour_index; /* [230] GenericInteger */
    struct GenericOctetString* new_absolute_colour; /* [231] GenericOctetString */
    } a;
} NewColour;

AsnLen BEncNewColourContent PROTO ((BUF_TYPE b, NewColour *v));

void BDecNewColourContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, NewColour *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct NewFont /* CHOICE */
{
    enum NewFontChoiceId
    {
        NEWFONT_NEW_FONT_NAME,
        NEWFONT_NEW_FONT_REFERENCE
    } choiceId;
    union NewFontChoiceUnion
    {
    struct GenericOctetString* new_font_name; /* [232] GenericOctetString */
    struct GenericObjectReference* new_font_reference; /* [233] GenericObjectReference */
    } a;
} NewFont;

AsnLen BEncNewFontContent PROTO ((BUF_TYPE b, NewFont *v));

void BDecNewFontContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, NewFont *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct NewContentSize /* CHOICE */
{
    enum NewContentSizeChoiceId
    {
        NEWCONTENTSIZE_CONTENT_SIZE,
        NEWCONTENTSIZE_NULL
    } choiceId;
    union NewContentSizeChoiceUnion
    {
    struct GenericInteger* content_size; /* GenericInteger */
    AsnNull null; /* NULL */
    } a;
} NewContentSize;

AsnLen BEncNewContentSizeContent PROTO ((BUF_TYPE b, NewContentSize *v));

void BDecNewContentSizeContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, NewContentSize *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct NewVariableValue /* CHOICE */
{
    enum NewVariableValueChoiceId
    {
        NEWVARIABLEVALUE_NEW_GENERIC_INTEGER,
        NEWVARIABLEVALUE_NEW_GENERIC_BOOLEAN,
        NEWVARIABLEVALUE_NEW_GENERIC_OCTET_STRING,
        NEWVARIABLEVALUE_NEW_GENERIC_OBJECT_REFERENCE,
        NEWVARIABLEVALUE_NEW_GENERIC_CONTENT_REFERENCE
    } choiceId;
    union NewVariableValueChoiceUnion
    {
    struct GenericInteger* new_generic_integer; /* [226] GenericInteger */
    struct GenericBoolean* new_generic_boolean; /* [225] GenericBoolean */
    struct GenericOctetString* new_generic_octet_string; /* [227] GenericOctetString */
    struct GenericObjectReference* new_generic_object_reference; /* [228] GenericObjectReference */
    struct GenericContentReference* new_generic_content_reference; /* [229] GenericContentReference */
    } a;
} NewVariableValue;

AsnLen BEncNewVariableValueContent PROTO ((BUF_TYPE b, NewVariableValue *v));

void BDecNewVariableValueContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, NewVariableValue *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct Parameter /* CHOICE */
{
    enum ParameterChoiceId
    {
        PARAMETER_NEW_GENERIC_BOOLEAN,
        PARAMETER_NEW_GENERIC_INTEGER,
        PARAMETER_NEW_GENERIC_OCTETSTRING,
        PARAMETER_NEW_GENERIC_OBJECT_REFERENCE,
        PARAMETER_NEW_GENERIC_CONTENT_REFERENCE
    } choiceId;
    union ParameterChoiceUnion
    {
    struct GenericBoolean* new_generic_boolean; /* [225] GenericBoolean */
    struct GenericInteger* new_generic_integer; /* [226] GenericInteger */
    struct GenericOctetString* new_generic_octetstring; /* [227] GenericOctetString */
    struct GenericObjectReference* new_generic_object_reference; /* [228] GenericObjectReference */
    struct GenericContentReference* new_generic_content_reference; /* [229] GenericContentReference */
    } a;
} Parameter;

AsnLen BEncParameterContent PROTO ((BUF_TYPE b, Parameter *v));

void BDecParameterContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, Parameter *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct Point /* SEQUENCE */
{
    struct GenericInteger* x; /* GenericInteger */
    struct GenericInteger* y; /* GenericInteger */
} Point;

AsnLen BEncPointContent PROTO ((BUF_TYPE b, Point *v));

void BDecPointContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, Point *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct Rational /* SEQUENCE */
{
    struct GenericInteger* numerator; /* GenericInteger */
    struct GenericInteger* denominator; /* GenericInteger OPTIONAL */
} Rational;

AsnLen BEncRationalContent PROTO ((BUF_TYPE b, Rational *v));

void BDecRationalContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, Rational *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef AsnList ForkSeqOf; /* SEQUENCE OF Parameter */

AsnLen BEncForkSeqOfContent PROTO ((BUF_TYPE b, ForkSeqOf *v));

void BDecForkSeqOfContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ForkSeqOf *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef AsnList DrawPolylineSeqOf; /* SEQUENCE OF Point */

AsnLen BEncDrawPolylineSeqOfContent PROTO ((BUF_TYPE b, DrawPolylineSeqOf *v));

void BDecDrawPolylineSeqOfContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, DrawPolylineSeqOf *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef AsnList DrawPolygonSeqOf; /* SEQUENCE OF Point */

AsnLen BEncDrawPolygonSeqOfContent PROTO ((BUF_TYPE b, DrawPolygonSeqOf *v));

void BDecDrawPolygonSeqOfContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, DrawPolygonSeqOf *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef AsnList CallSeqOf; /* SEQUENCE OF Parameter */

AsnLen BEncCallSeqOfContent PROTO ((BUF_TYPE b, CallSeqOf *v));

void BDecCallSeqOfContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, CallSeqOf *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct DefaultAttribute /* CHOICE */
{
    enum DefaultAttributeChoiceId
    {
        DEFAULTATTRIBUTE_CHARACTER_SET,
        DEFAULTATTRIBUTE_BACKGROUND_COLOUR,
        DEFAULTATTRIBUTE_TEXT_CONTENT_HOOK,
        DEFAULTATTRIBUTE_TEXT_COLOUR,
        DEFAULTATTRIBUTE_FONT,
        DEFAULTATTRIBUTE_FONT_ATTRIBUTES,
        DEFAULTATTRIBUTE_INTERCHANGED_PROGRAM_CONTENT_HOOK,
        DEFAULTATTRIBUTE_STREAM_CONTENT_HOOK,
        DEFAULTATTRIBUTE_BITMAP_CONTENT_HOOK,
        DEFAULTATTRIBUTE_LINE_ART_CONTENT_HOOK,
        DEFAULTATTRIBUTE_BUTTON_REF_COLOUR,
        DEFAULTATTRIBUTE_HIGHLIGHT_REF_COLOUR,
        DEFAULTATTRIBUTE_SLIDER_REF_COLOUR
    } choiceId;
    union DefaultAttributeChoiceUnion
    {
    AsnInt character_set; /* [38] IMPLICIT INTEGER */
    struct Colour* background_colour; /* [39] Colour */
    AsnInt text_content_hook; /* [40] IMPLICIT INTEGER */
    struct Colour* text_colour; /* [41] Colour */
    struct FontBody* font; /* [42] FontBody */
    AsnOcts* font_attributes; /* [43] IMPLICIT OCTET STRING */
    AsnInt interchanged_program_content_hook; /* [44] IMPLICIT INTEGER */
    AsnInt stream_content_hook; /* [45] IMPLICIT INTEGER */
    AsnInt bitmap_content_hook; /* [46] IMPLICIT INTEGER */
    AsnInt line_art_content_hook; /* [47] IMPLICIT INTEGER */
    struct Colour* button_ref_colour; /* [48] Colour */
    struct Colour* highlight_ref_colour; /* [49] Colour */
    struct Colour* slider_ref_colour; /* [50] Colour */
    } a;
} DefaultAttribute;

AsnLen BEncDefaultAttributeContent PROTO ((BUF_TYPE b, DefaultAttribute *v));

void BDecDefaultAttributeContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, DefaultAttribute *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct IngredientClass /* SET */
{
    RootClass* rootClass; /* RootClass (WITH COMPONENTS
{
    ...,
    external-reference (WITH COMPONENTS
    {
        ...,
        object-number (1..MAX)
    })
}) */
    AsnBool* initially_active; /* [56] IMPLICIT BOOLEAN DEFAULT TRUE */
    AsnInt* content_hook; /* [57] IMPLICIT INTEGER OPTIONAL */
    struct ContentBody* original_content; /* [58] ContentBody OPTIONAL */
    AsnBool* shared; /* [59] IMPLICIT BOOLEAN DEFAULT FALSE */
} IngredientClass;

AsnLen BEncIngredientClassContent PROTO ((BUF_TYPE b, IngredientClass *v));

void BDecIngredientClassContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, IngredientClass *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct IngredientClass PaletteClass; /* IngredientClass (WITH COMPONENTS
{
    ...,
    content-hook  PRESENT,
    original-content  PRESENT,
    initially-active (TRUE)
}) */

#define BEncPaletteClassContent BEncIngredientClassContent

#define BDecPaletteClassContent BDecIngredientClassContent




typedef struct IngredientClass FontClass; /* IngredientClass (WITH COMPONENTS
{
    ...,
    content-hook  PRESENT,
    original-content  PRESENT,
    initially-active (TRUE)
}) */

#define BEncFontClassContent BEncIngredientClassContent

#define BDecFontClassContent BDecIngredientClassContent




typedef struct IngredientClass CursorShapeClass; /* IngredientClass (WITH COMPONENTS
{
    ...,
    content-hook  PRESENT,
    original-content  PRESENT,
    initially-active (TRUE)
}) */

#define BEncCursorShapeClassContent BEncIngredientClassContent

#define BDecCursorShapeClassContent BDecIngredientClassContent




typedef struct VariableClass /* SET */
{
    RootClass* rootClass; /* RootClass (WITH COMPONENTS
{
    ...,
    external-reference (WITH COMPONENTS
    {
        ...,
        object-number (1..MAX)
    })
}) */
    AsnBool* initially_active; /* [56] IMPLICIT BOOLEAN DEFAULT TRUE */
    AsnInt* content_hook; /* [57] IMPLICIT INTEGER OPTIONAL */
    struct ContentBody* original_content; /* [58] ContentBody OPTIONAL */
    AsnBool* shared; /* [59] IMPLICIT BOOLEAN DEFAULT FALSE */
    struct OriginalValue* original_value; /* [67] OriginalValue */
} VariableClass;

AsnLen BEncVariableClassContent PROTO ((BUF_TYPE b, VariableClass *v));

void BDecVariableClassContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, VariableClass *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct VariableClass BooleanVariableClass; /* VariableClass (WITH COMPONENTS
{
    ...,
    original-value (WITH COMPONENTS
    {
        ...,
        boolean  PRESENT
    })
}) */

#define BEncBooleanVariableClassContent BEncVariableClassContent

#define BDecBooleanVariableClassContent BDecVariableClassContent




typedef struct VariableClass IntegerVariableClass; /* VariableClass (WITH COMPONENTS
{
    ...,
    original-value (WITH COMPONENTS
    {
        ...,
        integer  PRESENT
    })
}) */

#define BEncIntegerVariableClassContent BEncVariableClassContent

#define BDecIntegerVariableClassContent BDecVariableClassContent




typedef struct VariableClass OctetStringVariableClass; /* VariableClass (WITH COMPONENTS
{
    ...,
    original-value (WITH COMPONENTS
    {
        ...,
        octetstring  PRESENT
    })
}) */

#define BEncOctetStringVariableClassContent BEncVariableClassContent

#define BDecOctetStringVariableClassContent BDecVariableClassContent




typedef struct VariableClass ObjectRefVariableClass; /* VariableClass (WITH COMPONENTS
{
    ...,
    original-value (WITH COMPONENTS
    {
        ...,
        object-reference  PRESENT
    })
}) */

#define BEncObjectRefVariableClassContent BEncVariableClassContent

#define BDecObjectRefVariableClassContent BDecVariableClassContent




typedef struct VariableClass ContentRefVariableClass; /* VariableClass (WITH COMPONENTS
{
    ...,
    original-value (WITH COMPONENTS
    {
        ...,
        content-reference  PRESENT
    })
}) */

#define BEncContentRefVariableClassContent BEncVariableClassContent

#define BDecContentRefVariableClassContent BDecVariableClassContent




typedef struct IngredientClass PresentableClass; /* IngredientClass */

#define BEncPresentableClassContent BEncIngredientClassContent

#define BDecPresentableClassContent BDecIngredientClassContent




typedef struct StreamComponent /* CHOICE */
{
    enum StreamComponentChoiceId
    {
        STREAMCOMPONENT_AUDIO,
        STREAMCOMPONENT_VIDEO,
        STREAMCOMPONENT_RTGRAPHICS
    } choiceId;
    union StreamComponentChoiceUnion
    {
    struct AudioClass* audio; /* [95] IMPLICIT AudioClass */
    struct VideoClass* video; /* [96] IMPLICIT VideoClass */
    struct RTGraphicsClass* rtgraphics; /* [97] IMPLICIT RTGraphicsClass */
    } a;
} StreamComponent;

AsnLen BEncStreamComponentContent PROTO ((BUF_TYPE b, StreamComponent *v));

void BDecStreamComponentContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, StreamComponent *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct Call /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* call_succeeded; /* ObjectReference */
    CallSeqOf* parameters; /* CallSeqOf SIZE (1..MAX) OPTIONAL */
} Call;

AsnLen BEncCallContent PROTO ((BUF_TYPE b, Call *v));

void BDecCallContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, Call *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct DrawPolygon /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    DrawPolygonSeqOf* pointlist; /* DrawPolygonSeqOf SIZE (1..MAX) */
} DrawPolygon;

AsnLen BEncDrawPolygonContent PROTO ((BUF_TYPE b, DrawPolygon *v));

void BDecDrawPolygonContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, DrawPolygon *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct DrawPolyline /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    DrawPolylineSeqOf* pointlist; /* DrawPolylineSeqOf SIZE (1..MAX) */
} DrawPolyline;

AsnLen BEncDrawPolylineContent PROTO ((BUF_TYPE b, DrawPolyline *v));

void BDecDrawPolylineContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, DrawPolyline *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct Fork /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ObjectReference* fork_succeeded; /* ObjectReference */
    ForkSeqOf* parameters; /* ForkSeqOf SIZE (1..MAX) OPTIONAL */
} Fork;

AsnLen BEncForkContent PROTO ((BUF_TYPE b, Fork *v));

void BDecForkContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, Fork *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SendEvent /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericObjectReference* emulated_event_source; /* GenericObjectReference */
    EventType emulated_event_type; /* EventType */
    struct EmulatedEventData* emulated_event_data; /* EmulatedEventData OPTIONAL */
} SendEvent;

AsnLen BEncSendEventContent PROTO ((BUF_TYPE b, SendEvent *v));

void BDecSendEventContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SendEvent *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetFillColour /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct NewColour* new_fill_colour; /* NewColour OPTIONAL */
} SetFillColour;

AsnLen BEncSetFillColourContent PROTO ((BUF_TYPE b, SetFillColour *v));

void BDecSetFillColourContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetFillColour *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetFontRef /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct NewFont* new_font; /* NewFont */
} SetFontRef;

AsnLen BEncSetFontRefContent PROTO ((BUF_TYPE b, SetFontRef *v));

void BDecSetFontRefContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetFontRef *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetLineColour /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct NewColour* new_line_colour; /* NewColour */
} SetLineColour;

AsnLen BEncSetLineColourContent PROTO ((BUF_TYPE b, SetLineColour *v));

void BDecSetLineColourContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetLineColour *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetSpeed /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct Rational* new_speed; /* Rational */
} SetSpeed;

AsnLen BEncSetSpeedContent PROTO ((BUF_TYPE b, SetSpeed *v));

void BDecSetSpeedContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetSpeed *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetTimer /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* timer_id; /* GenericInteger */
    struct NewTimer* new_timer; /* NewTimer OPTIONAL */
} SetTimer;

AsnLen BEncSetTimerContent PROTO ((BUF_TYPE b, SetTimer *v));

void BDecSetTimerContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetTimer *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetVariable /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct NewVariableValue* new_variable_value; /* NewVariableValue */
} SetVariable;

AsnLen BEncSetVariableContent PROTO ((BUF_TYPE b, SetVariable *v));

void BDecSetVariableContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetVariable *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct TestVariable /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct GenericInteger* operator; /* GenericInteger */
    struct ComparisonValue* comparison_value; /* ComparisonValue */
} TestVariable;

AsnLen BEncTestVariableContent PROTO ((BUF_TYPE b, TestVariable *v));

void BDecTestVariableContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TestVariable *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct TransitionTo /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct ConnectionTagOrNull* connection_tag_or_null; /* ConnectionTagOrNull */
    struct GenericInteger* transition_effect; /* GenericInteger OPTIONAL */
} TransitionTo;

AsnLen BEncTransitionToContent PROTO ((BUF_TYPE b, TransitionTo *v));

void BDecTransitionToContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TransitionTo *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetBackgroundColour /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct NewColour* new_background_colour; /* NewColour */
} SetBackgroundColour;

AsnLen BEncSetBackgroundColourContent PROTO ((BUF_TYPE b, SetBackgroundColour *v));

void BDecSetBackgroundColourContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetBackgroundColour *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetTextColour /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct NewColour* new_text_colour; /* NewColour */
} SetTextColour;

AsnLen BEncSetTextColourContent PROTO ((BUF_TYPE b, SetTextColour *v));

void BDecSetTextColourContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetTextColour *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct NewReferencedContent /* SEQUENCE */
{
    struct GenericContentReference* generic_content_reference; /* GenericContentReference */
    struct NewContentSize* new_content_size; /* [234] NewContentSize */
    struct GenericInteger* new_content_cache_priority; /* [235] GenericInteger OPTIONAL */
} NewReferencedContent;

AsnLen BEncNewReferencedContentContent PROTO ((BUF_TYPE b, NewReferencedContent *v));

void BDecNewReferencedContentContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, NewReferencedContent *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef AsnList StreamClassSeqOf; /* SEQUENCE OF StreamComponent */

AsnLen BEncStreamClassSeqOfContent PROTO ((BUF_TYPE b, StreamClassSeqOf *v));

void BDecStreamClassSeqOfContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, StreamClassSeqOf *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef AsnList ApplicationClassSeqOf; /* SEQUENCE OF DefaultAttribute */

AsnLen BEncApplicationClassSeqOfContent PROTO ((BUF_TYPE b, ApplicationClassSeqOf *v));

void BDecApplicationClassSeqOfContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ApplicationClassSeqOf *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct StreamClass /* SET */
{
    RootClass* rootClass; /* RootClass (WITH COMPONENTS
{
    ...,
    external-reference (WITH COMPONENTS
    {
        ...,
        object-number (1..MAX)
    })
}) */
    AsnBool* initially_active; /* [56] IMPLICIT BOOLEAN DEFAULT TRUE */
    AsnInt* content_hook; /* [57] IMPLICIT INTEGER OPTIONAL */
    struct ContentBody* original_content; /* [58] ContentBody OPTIONAL */
    AsnBool* shared; /* [59] IMPLICIT BOOLEAN DEFAULT FALSE */
    StreamClassSeqOf* multiplex; /* [92] IMPLICIT StreamClassSeqOf SIZE (1..MAX) OPTIONAL */
    Storage* storage; /* [93] IMPLICIT Storage DEFAULT stream */
    StreamClassInt* looping; /* [94] IMPLICIT StreamClassInt DEFAULT 1 */
} StreamClass;

AsnLen BEncStreamClassContent PROTO ((BUF_TYPE b, StreamClass *v));

void BDecStreamClassContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, StreamClass *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct NewContent /* CHOICE */
{
    enum NewContentChoiceId
    {
        NEWCONTENT_NEW_INCLUDED_CONTENT,
        NEWCONTENT_NEW_REFERENCED_CONTENT
    } choiceId;
    union NewContentChoiceUnion
    {
    struct GenericOctetString* new_included_content; /* GenericOctetString */
    struct NewReferencedContent* new_referenced_content; /* NewReferencedContent */
    } a;
} NewContent;

AsnLen BEncNewContentContent PROTO ((BUF_TYPE b, NewContent *v));

void BDecNewContentContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, NewContent *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SetData /* SEQUENCE */
{
    struct GenericObjectReference* target; /* GenericObjectReference */
    struct NewContent* new_content; /* NewContent */
} SetData;

AsnLen BEncSetDataContent PROTO ((BUF_TYPE b, SetData *v));

void BDecSetDataContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SetData *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct ElementaryAction /* CHOICE */
{
    enum ElementaryActionChoiceId
    {
        ELEMENTARYACTION_ACTIVATE,
        ELEMENTARYACTION_ADD,
        ELEMENTARYACTION_ADD_ITEM,
        ELEMENTARYACTION_APPEND,
        ELEMENTARYACTION_BRING_TO_FRONT,
        ELEMENTARYACTION_CALL,
        ELEMENTARYACTION_CALL_ACTION_SLOT,
        ELEMENTARYACTION_CLEAR,
        ELEMENTARYACTION_CLONE,
        ELEMENTARYACTION_CLOSE_CONNECTION,
        ELEMENTARYACTION_DEACTIVATE,
        ELEMENTARYACTION_DEL_ITEM,
        ELEMENTARYACTION_DESELECT,
        ELEMENTARYACTION_DESELECT_ITEM,
        ELEMENTARYACTION_DIVIDE,
        ELEMENTARYACTION_DRAW_ARC,
        ELEMENTARYACTION_DRAW_LINE,
        ELEMENTARYACTION_DRAW_OVAL,
        ELEMENTARYACTION_DRAW_POLYGON,
        ELEMENTARYACTION_DRAW_POLYLINE,
        ELEMENTARYACTION_DRAW_RECTANGLE,
        ELEMENTARYACTION_DRAW_SECTOR,
        ELEMENTARYACTION_FORK,
        ELEMENTARYACTION_GET_AVAILABILITY_STATUS,
        ELEMENTARYACTION_GET_BOX_SIZE,
        ELEMENTARYACTION_GET_CELL_ITEM,
        ELEMENTARYACTION_GET_CURSOR_POSITION,
        ELEMENTARYACTION_GET_ENGINE_SUPPORT,
        ELEMENTARYACTION_GET_ENTRY_POINT,
        ELEMENTARYACTION_GET_FILL_COLOUR,
        ELEMENTARYACTION_GET_FIRST_ITEM,
        ELEMENTARYACTION_GET_HIGHLIGHT_STATUS,
        ELEMENTARYACTION_GET_INTERACTION_STATUS,
        ELEMENTARYACTION_GET_ITEM_STATUS,
        ELEMENTARYACTION_GET_LABEL,
        ELEMENTARYACTION_GET_LAST_ANCHOR_FIRED,
        ELEMENTARYACTION_GET_LINE_COLOUR,
        ELEMENTARYACTION_GET_LINE_STYLE,
        ELEMENTARYACTION_GET_LINE_WIDTH,
        ELEMENTARYACTION_GET_LIST_ITEM,
        ELEMENTARYACTION_GET_LIST_SIZE,
        ELEMENTARYACTION_GET_OVERWRITE_MODE,
        ELEMENTARYACTION_GET_PORTION,
        ELEMENTARYACTION_GET_POSITION,
        ELEMENTARYACTION_GET_RUNNING_STATUS,
        ELEMENTARYACTION_GET_SELECTION_STATUS,
        ELEMENTARYACTION_GET_SLIDER_VALUE,
        ELEMENTARYACTION_GET_TEXT_CONTENT,
        ELEMENTARYACTION_GET_TEXT_DATA,
        ELEMENTARYACTION_GET_TOKEN_POSITION,
        ELEMENTARYACTION_GET_VOLUME,
        ELEMENTARYACTION_LAUNCH,
        ELEMENTARYACTION_LOCK_SCREEN,
        ELEMENTARYACTION_MODULO,
        ELEMENTARYACTION_MOVE,
        ELEMENTARYACTION_MOVE_TO,
        ELEMENTARYACTION_MULTIPLY,
        ELEMENTARYACTION_OPEN_CONNECTION,
        ELEMENTARYACTION_PRELOAD,
        ELEMENTARYACTION_PUT_BEFORE,
        ELEMENTARYACTION_PUT_BEHIND,
        ELEMENTARYACTION_QUIT,
        ELEMENTARYACTION_READ_PERSISTENT,
        ELEMENTARYACTION_RUN,
        ELEMENTARYACTION_SCALE_BITMAP,
        ELEMENTARYACTION_SCALE_VIDEO,
        ELEMENTARYACTION_SCROLL_ITEMS,
        ELEMENTARYACTION_SELECT,
        ELEMENTARYACTION_SELECT_ITEM,
        ELEMENTARYACTION_SEND_EVENT,
        ELEMENTARYACTION_SEND_TO_BACK,
        ELEMENTARYACTION_SET_BOX_SIZE,
        ELEMENTARYACTION_SET_CACHE_PRIORITY,
        ELEMENTARYACTION_SET_COUNTER_END_POSITION,
        ELEMENTARYACTION_SET_COUNTER_POSITION,
        ELEMENTARYACTION_SET_COUNTER_TRIGGER,
        ELEMENTARYACTION_SET_CURSOR_POSITION,
        ELEMENTARYACTION_SET_CURSOR_SHAPE,
        ELEMENTARYACTION_SET_DATA,
        ELEMENTARYACTION_SET_ENTRY_POINT,
        ELEMENTARYACTION_SET_FILL_COLOUR,
        ELEMENTARYACTION_SET_FIRST_ITEM,
        ELEMENTARYACTION_SET_FONT_REF,
        ELEMENTARYACTION_SET_HIGHLIGHT_STATUS,
        ELEMENTARYACTION_SET_INTERACTION_STATUS,
        ELEMENTARYACTION_SET_LABEL,
        ELEMENTARYACTION_SET_LINE_COLOUR,
        ELEMENTARYACTION_SET_LINE_STYLE,
        ELEMENTARYACTION_SET_LINE_WIDTH,
        ELEMENTARYACTION_SET_OVERWRITE_MODE,
        ELEMENTARYACTION_SET_PALETTE_REF,
        ELEMENTARYACTION_SET_PORTION,
        ELEMENTARYACTION_SET_POSITION,
        ELEMENTARYACTION_SET_SLIDER_VALUE,
        ELEMENTARYACTION_SET_SPEED,
        ELEMENTARYACTION_SET_TIMER,
        ELEMENTARYACTION_SET_TRANSPARENCY,
        ELEMENTARYACTION_SET_VARIABLE,
        ELEMENTARYACTION_SET_VOLUME,
        ELEMENTARYACTION_SPAWN,
        ELEMENTARYACTION_STEP,
        ELEMENTARYACTION_STOP,
        ELEMENTARYACTION_STORE_PERSISTENT,
        ELEMENTARYACTION_SUBTRACT,
        ELEMENTARYACTION_TEST_VARIABLE,
        ELEMENTARYACTION_TOGGLE,
        ELEMENTARYACTION_TOGGLE_ITEM,
        ELEMENTARYACTION_TRANSITION_TO,
        ELEMENTARYACTION_UNLOAD,
        ELEMENTARYACTION_UNLOCK_SCREEN,
        ELEMENTARYACTION_SET_BACKGROUND_COLOUR,
        ELEMENTARYACTION_SET_CELL_POSITION,
        ELEMENTARYACTION_SET_INPUT_REGISTER,
        ELEMENTARYACTION_SET_TEXT_COLOUR,
        ELEMENTARYACTION_SET_FONT_ATTRIBUTES,
        ELEMENTARYACTION_SET_BITMAP_DECODE_OFFSET,
        ELEMENTARYACTION_GET_BITMAP_DECODE_OFFSET,
        ELEMENTARYACTION_SET_VIDEO_DECODE_OFFSET,
        ELEMENTARYACTION_GET_VIDEO_DECODE_OFFSET,
        ELEMENTARYACTION_GET_FOCUS_POSITION,
        ELEMENTARYACTION_SET_FOCUS_POSITION,
        ELEMENTARYACTION_SET_SLIDER_PARAMETERS,
        ELEMENTARYACTION_SET_DESKTOP_COLOUR,
    } choiceId;
    union ElementaryActionChoiceUnion
    {
    struct GenericObjectReference* activate; /* [115] GenericObjectReference */
    struct Add* add; /* [116] IMPLICIT Add */
    struct AddItem* add_item; /* [117] IMPLICIT AddItem */
    struct Append* append; /* [118] IMPLICIT Append */
    struct GenericObjectReference* bring_to_front; /* [119] GenericObjectReference */
    struct Call* call; /* [120] IMPLICIT Call */
    struct CallActionSlot* call_action_slot; /* [121] IMPLICIT CallActionSlot */
    struct GenericObjectReference* clear; /* [122] GenericObjectReference */
    struct Clone* clone; /* [123] IMPLICIT Clone */
    struct CloseConnection* close_connection; /* [124] IMPLICIT CloseConnection */
    struct GenericObjectReference* deactivate; /* [125] GenericObjectReference */
    struct DelItem* del_item; /* [126] IMPLICIT DelItem */
    struct GenericObjectReference* deselect; /* [127] GenericObjectReference */
    struct DeselectItem* deselect_item; /* [128] IMPLICIT DeselectItem */
    struct Divide* divide; /* [129] IMPLICIT Divide */
    struct DrawArc* draw_arc; /* [130] IMPLICIT DrawArc */
    struct DrawLine* draw_line; /* [131] IMPLICIT DrawLine */
    struct DrawOval* draw_oval; /* [132] IMPLICIT DrawOval */
    struct DrawPolygon* draw_polygon; /* [133] IMPLICIT DrawPolygon */
    struct DrawPolyline* draw_polyline; /* [134] IMPLICIT DrawPolyline */
    struct DrawRectangle* draw_rectangle; /* [135] IMPLICIT DrawRectangle */
    struct DrawSector* draw_sector; /* [136] IMPLICIT DrawSector */
    struct Fork* fork; /* [137] IMPLICIT Fork */
    struct GetAvailabilityStatus* get_availability_status; /* [138] IMPLICIT GetAvailabilityStatus */
    struct GetBoxSize* get_box_size; /* [139] IMPLICIT GetBoxSize */
    struct GetCellItem* get_cell_item; /* [140] IMPLICIT GetCellItem */
    struct GetCursorPosition* get_cursor_position; /* [141] IMPLICIT GetCursorPosition */
    struct GetEngineSupport* get_engine_support; /* [142] IMPLICIT GetEngineSupport */
    struct GetEntryPoint* get_entry_point; /* [143] IMPLICIT GetEntryPoint */
    struct GetFillColour* get_fill_colour; /* [144] IMPLICIT GetFillColour */
    struct GetFirstItem* get_first_item; /* [145] IMPLICIT GetFirstItem */
    struct GetHighlightStatus* get_highlight_status; /* [146] IMPLICIT GetHighlightStatus */
    struct GetInteractionStatus* get_interaction_status; /* [147] IMPLICIT GetInteractionStatus */
    struct GetItemStatus* get_item_status; /* [148] IMPLICIT GetItemStatus */
    struct GetLabel* get_label; /* [149] IMPLICIT GetLabel */
    struct GetLastAnchorFired* get_last_anchor_fired; /* [150] IMPLICIT GetLastAnchorFired */
    struct GetLineColour* get_line_colour; /* [151] IMPLICIT GetLineColour */
    struct GetLineStyle* get_line_style; /* [152] IMPLICIT GetLineStyle */
    struct GetLineWidth* get_line_width; /* [153] IMPLICIT GetLineWidth */
    struct GetListItem* get_list_item; /* [154] IMPLICIT GetListItem */
    struct GetListSize* get_list_size; /* [155] IMPLICIT GetListSize */
    struct GetOverwriteMode* get_overwrite_mode; /* [156] IMPLICIT GetOverwriteMode */
    struct GetPortion* get_portion; /* [157] IMPLICIT GetPortion */
    struct GetPosition* get_position; /* [158] IMPLICIT GetPosition */
    struct GetRunningStatus* get_running_status; /* [159] IMPLICIT GetRunningStatus */
    struct GetSelectionStatus* get_selection_status; /* [160] IMPLICIT GetSelectionStatus */
    struct GetSliderValue* get_slider_value; /* [161] IMPLICIT GetSliderValue */
    struct GetTextContent* get_text_content; /* [162] IMPLICIT GetTextContent */
    struct GetTextData* get_text_data; /* [163] IMPLICIT GetTextData */
    struct GetTokenPosition* get_token_position; /* [164] IMPLICIT GetTokenPosition */
    struct GetVolume* get_volume; /* [165] IMPLICIT GetVolume */
    struct GenericObjectReference* launch; /* [166] GenericObjectReference */
    struct GenericObjectReference* lock_screen; /* [167] GenericObjectReference */
    struct Modulo* modulo; /* [168] IMPLICIT Modulo */
    struct Move* move; /* [169] IMPLICIT Move */
    struct MoveTo* move_to; /* [170] IMPLICIT MoveTo */
    struct Multiply* multiply; /* [171] IMPLICIT Multiply */
    struct OpenConnection* open_connection; /* [172] IMPLICIT OpenConnection */
    struct GenericObjectReference* preload; /* [173] GenericObjectReference */
    struct PutBefore* put_before; /* [174] IMPLICIT PutBefore */
    struct PutBehind* put_behind; /* [175] IMPLICIT PutBehind */
    struct GenericObjectReference* quit; /* [176] GenericObjectReference */
    struct ReadPersistent* read_persistent; /* [177] IMPLICIT ReadPersistent */
    struct GenericObjectReference* run; /* [178] GenericObjectReference */
    struct ScaleBitmap* scale_bitmap; /* [179] IMPLICIT ScaleBitmap */
    struct ScaleVideo* scale_video; /* [180] IMPLICIT ScaleVideo */
    struct ScrollItems* scroll_items; /* [181] IMPLICIT ScrollItems */
    struct GenericObjectReference* select; /* [182] GenericObjectReference */
    struct SelectItem* select_item; /* [183] IMPLICIT SelectItem */
    struct SendEvent* send_event; /* [184] IMPLICIT SendEvent */
    struct GenericObjectReference* send_to_back; /* [185] GenericObjectReference */
    struct SetBoxSize* set_box_size; /* [186] IMPLICIT SetBoxSize */
    struct SetCachePriority* set_cache_priority; /* [187] IMPLICIT SetCachePriority */
    struct SetCounterEndPosition* set_counter_end_position; /* [188] IMPLICIT SetCounterEndPosition */
    struct SetCounterPosition* set_counter_position; /* [189] IMPLICIT SetCounterPosition */
    struct SetCounterTrigger* set_counter_trigger; /* [190] IMPLICIT SetCounterTrigger */
    struct SetCursorPosition* set_cursor_position; /* [191] IMPLICIT SetCursorPosition */
    struct SetCursorShape* set_cursor_shape; /* [192] IMPLICIT SetCursorShape */
    struct SetData* set_data; /* [193] IMPLICIT SetData */
    struct SetEntryPoint* set_entry_point; /* [194] IMPLICIT SetEntryPoint */
    struct SetFillColour* set_fill_colour; /* [195] IMPLICIT SetFillColour */
    struct SetFirstItem* set_first_item; /* [196] IMPLICIT SetFirstItem */
    struct SetFontRef* set_font_ref; /* [197] IMPLICIT SetFontRef */
    struct SetHighlightStatus* set_highlight_status; /* [198] IMPLICIT SetHighlightStatus */
    struct SetInteractionStatus* set_interaction_status; /* [199] IMPLICIT SetInteractionStatus */
    struct SetLabel* set_label; /* [200] IMPLICIT SetLabel */
    struct SetLineColour* set_line_colour; /* [201] IMPLICIT SetLineColour */
    struct SetLineStyle* set_line_style; /* [202] IMPLICIT SetLineStyle */
    struct SetLineWidth* set_line_width; /* [203] IMPLICIT SetLineWidth */
    struct SetOverwriteMode* set_overwrite_mode; /* [204] IMPLICIT SetOverwriteMode */
    struct SetPaletteRef* set_palette_ref; /* [205] IMPLICIT SetPaletteRef */
    struct SetPortion* set_portion; /* [206] IMPLICIT SetPortion */
    struct SetPosition* set_position; /* [207] IMPLICIT SetPosition */
    struct SetSliderValue* set_slider_value; /* [208] IMPLICIT SetSliderValue */
    struct SetSpeed* set_speed; /* [209] IMPLICIT SetSpeed */
    struct SetTimer* set_timer; /* [210] IMPLICIT SetTimer */
    struct SetTransparency* set_transparency; /* [211] IMPLICIT SetTransparency */
    struct SetVariable* set_variable; /* [212] IMPLICIT SetVariable */
    struct SetVolume* set_volume; /* [213] IMPLICIT SetVolume */
    struct GenericObjectReference* spawn; /* [214] GenericObjectReference */
    struct Step* step; /* [215] IMPLICIT Step */
    struct GenericObjectReference* stop; /* [216] GenericObjectReference */
    struct StorePersistent* store_persistent; /* [217] IMPLICIT StorePersistent */
    struct Subtract* subtract; /* [218] IMPLICIT Subtract */
    struct TestVariable* test_variable; /* [219] IMPLICIT TestVariable */
    struct GenericObjectReference* toggle; /* [220] GenericObjectReference */
    struct ToggleItem* toggle_item; /* [221] IMPLICIT ToggleItem */
    struct TransitionTo* transition_to; /* [222] IMPLICIT TransitionTo */
    struct GenericObjectReference* unload; /* [223] GenericObjectReference */
    struct GenericObjectReference* unlock_screen; /* [224] GenericObjectReference */
    struct SetBackgroundColour* set_background_colour; /* [237] IMPLICIT SetBackgroundColour */
    struct SetCellPosition* set_cell_position; /* [238] IMPLICIT SetCellPosition */
    struct SetInputRegister* set_input_register; /* [239] IMPLICIT SetInputRegister */
    struct SetTextColour* set_text_colour; /* [240] IMPLICIT SetTextColour */
    struct SetFontAttributes* set_font_attributes; /* [241] IMPLICIT SetFontAttributes */
    struct SetPositionOffset* set_position_offset; /* [242] IMPLICIT SetPositionOffset */
    struct GetPositionOffset* get_position_offset; /* [243] IMPLICIT GetPositionOffset */
    struct GetFocusPosition* get_focus_position; /* [244] IMPLICIT GetFocusPosition */
    struct SetFocusPosition* set_focus_position; /* [245] IMPLICIT SetFocusPosition */
    struct SetSliderParameters* set_slider_parameters; /* [248] IMPLICIT SetSliderParameters */
    struct SetDesktopColour* set_desktop_colour; /* [250] IMPLICIT SetDesktopColour */
    } a;
} ElementaryAction;

AsnLen BEncElementaryActionContent PROTO ((BUF_TYPE b, ElementaryAction *v));

void BDecElementaryActionContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ElementaryAction *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef AsnList ActionClass; /* SEQUENCE SIZE (1..MAX) OF ElementaryAction */

AsnLen BEncActionClassContent PROTO ((BUF_TYPE b, ActionClass *v));

void BDecActionClassContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ActionClass *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct LinkClass /* SET */
{
    RootClass* rootClass; /* RootClass (WITH COMPONENTS
{
    ...,
    external-reference (WITH COMPONENTS
    {
        ...,
        object-number (1..MAX)
    })
}) */
    AsnBool* initially_active; /* [56] IMPLICIT BOOLEAN DEFAULT TRUE */
    AsnInt* content_hook; /* [57] IMPLICIT INTEGER OPTIONAL */
    struct ContentBody* original_content; /* [58] ContentBody OPTIONAL */
    AsnBool* shared; /* [59] IMPLICIT BOOLEAN DEFAULT FALSE */
    struct LinkCondition* link_condition; /* [62] IMPLICIT LinkCondition */
    ActionClass* link_effect; /* [63] IMPLICIT ActionClass */
} LinkClass;

AsnLen BEncLinkClassContent PROTO ((BUF_TYPE b, LinkClass *v));

void BDecLinkClassContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, LinkClass *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct ActionSlot /* CHOICE */
{
    enum ActionSlotChoiceId
    {
        ACTIONSLOT_ACTION_CLASS,
        ACTIONSLOT_NULL
    } choiceId;
    union ActionSlotChoiceUnion
    {
    ActionClass* action_class; /* ActionClass */
    AsnNull null; /* NULL */
    } a;
} ActionSlot;

AsnLen BEncActionSlotContent PROTO ((BUF_TYPE b, ActionSlot *v));

void BDecActionSlotContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ActionSlot *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef AsnList TokenGroupItemSeqOf; /* SEQUENCE OF ActionSlot */

AsnLen BEncTokenGroupItemSeqOfContent PROTO ((BUF_TYPE b, TokenGroupItemSeqOf *v));

void BDecTokenGroupItemSeqOfContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TokenGroupItemSeqOf *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef AsnList TokenGroupClassSeqOf1; /* SEQUENCE OF ActionSlot */

AsnLen BEncTokenGroupClassSeqOf1Content PROTO ((BUF_TYPE b, TokenGroupClassSeqOf1 *v));

void BDecTokenGroupClassSeqOf1Content PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TokenGroupClassSeqOf1 *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct TokenGroupItem /* SEQUENCE */
{
    struct ObjectReference* a_visible; /* ObjectReference */
    TokenGroupItemSeqOf* action_slots; /* TokenGroupItemSeqOf SIZE (1..MAX) OPTIONAL */
} TokenGroupItem;

AsnLen BEncTokenGroupItemContent PROTO ((BUF_TYPE b, TokenGroupItem *v));

void BDecTokenGroupItemContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TokenGroupItem *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef AsnList TokenGroupClassSeqOf; /* SEQUENCE OF TokenGroupItem */

AsnLen BEncTokenGroupClassSeqOfContent PROTO ((BUF_TYPE b, TokenGroupClassSeqOf *v));

void BDecTokenGroupClassSeqOfContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TokenGroupClassSeqOf *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct TokenGroupClass /* SET */
{
    RootClass* rootClass; /* RootClass (WITH COMPONENTS
{
    ...,
    external-reference (WITH COMPONENTS
    {
        ...,
        object-number (1..MAX)
    })
}) */
    AsnBool* initially_active; /* [56] IMPLICIT BOOLEAN DEFAULT TRUE */
    AsnInt* content_hook; /* [57] IMPLICIT INTEGER OPTIONAL */
    struct ContentBody* original_content; /* [58] ContentBody OPTIONAL */
    AsnBool* shared; /* [59] IMPLICIT BOOLEAN DEFAULT FALSE */
    TokenManagerClassSeqOf* movement_table; /* [70] IMPLICIT TokenManagerClassSeqOf SIZE (1..MAX) OPTIONAL */
    TokenGroupClassSeqOf* token_group_items; /* [71] IMPLICIT TokenGroupClassSeqOf SIZE (1..MAX) OPTIONAL */
    TokenGroupClassSeqOf1* no_token_action_slots; /* [72] IMPLICIT TokenGroupClassSeqOf1 SIZE (1..MAX) OPTIONAL */
} TokenGroupClass;

AsnLen BEncTokenGroupClassContent PROTO ((BUF_TYPE b, TokenGroupClass *v));

void BDecTokenGroupClassContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TokenGroupClass *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct ListGroupClass /* SET */
{
    RootClass* rootClass; /* RootClass (WITH COMPONENTS
{
    ...,
    external-reference (WITH COMPONENTS
    {
        ...,
        object-number (1..MAX)
    })
}) */
    AsnBool* initially_active; /* [56] IMPLICIT BOOLEAN DEFAULT TRUE */
    AsnInt* content_hook; /* [57] IMPLICIT INTEGER OPTIONAL */
    struct ContentBody* original_content; /* [58] ContentBody OPTIONAL */
    AsnBool* shared; /* [59] IMPLICIT BOOLEAN DEFAULT FALSE */
    TokenManagerClassSeqOf* movement_table; /* [70] IMPLICIT TokenManagerClassSeqOf SIZE (1..MAX) OPTIONAL */
    TokenGroupClassSeqOf* token_group_items; /* [71] IMPLICIT TokenGroupClassSeqOf SIZE (1..MAX) OPTIONAL */
    TokenGroupClassSeqOf1* no_token_action_slots; /* [72] IMPLICIT TokenGroupClassSeqOf1 SIZE (1..MAX) OPTIONAL */
    ListGroupClassSeqOf* positions; /* [73] IMPLICIT ListGroupClassSeqOf SIZE (1..MAX) */
    AsnBool* wrap_around; /* [74] IMPLICIT BOOLEAN DEFAULT FALSE */
    AsnBool* multiple_selection; /* [75] IMPLICIT BOOLEAN DEFAULT FALSE */
} ListGroupClass;

AsnLen BEncListGroupClassContent PROTO ((BUF_TYPE b, ListGroupClass *v));

void BDecListGroupClassContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ListGroupClass *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GroupItem /* CHOICE */
{
    enum GroupItemChoiceId
    {
        GROUPITEM_RESIDENT_PROGRAM,
        GROUPITEM_REMOTE_PROGRAM,
        GROUPITEM_INTERCHANGED_PROGRAM,
        GROUPITEM_PALETTE,
        GROUPITEM_FONT,
        GROUPITEM_CURSOR_SHAPE,
        GROUPITEM_BOOLEAN_VARIABLE,
        GROUPITEM_INTEGER_VARIABLE,
        GROUPITEM_OCTET_STRING_VARIABLE,
        GROUPITEM_OBJECT_REF_VARIABLE,
        GROUPITEM_CONTENT_REF_VARIABLE,
        GROUPITEM_LINK,
        GROUPITEM_STREAM,
        GROUPITEM_BITMAP,
        GROUPITEM_LINE_ART,
        GROUPITEM_DYNAMIC_LINE_ART,
        GROUPITEM_RECTANGLE,
        GROUPITEM_HOTSPOT,
        GROUPITEM_SWITCH_BUTTON,
        GROUPITEM_PUSH_BUTTON,
        GROUPITEM_TEXT,
        GROUPITEM_ENTRY_FIELD,
        GROUPITEM_HYPER_TEXT,
        GROUPITEM_SLIDER,
        GROUPITEM_TOKEN_GROUP,
        GROUPITEM_LIST_GROUP
    } choiceId;
    union GroupItemChoiceUnion
    {
    ResidentProgramClass* resident_program; /* [9] IMPLICIT ResidentProgramClass */
    struct RemoteProgramClass* remote_program; /* [10] IMPLICIT RemoteProgramClass */
    InterchangedProgramClass* interchanged_program; /* [11] IMPLICIT InterchangedProgramClass */
    PaletteClass* palette; /* [12] IMPLICIT PaletteClass */
    FontClass* font_class; /* [13] IMPLICIT FontClass */
    CursorShapeClass* cursor_shape; /* [14] IMPLICIT CursorShapeClass */
    BooleanVariableClass* boolean_variable; /* [15] IMPLICIT BooleanVariableClass */
    IntegerVariableClass* integer_variable; /* [16] IMPLICIT IntegerVariableClass */
    OctetStringVariableClass* octet_string_variable; /* [17] IMPLICIT OctetStringVariableClass */
    ObjectRefVariableClass* object_ref_variable; /* [18] IMPLICIT ObjectRefVariableClass */
    ContentRefVariableClass* content_ref_variable; /* [19] IMPLICIT ContentRefVariableClass */
    struct LinkClass* link; /* [20] IMPLICIT LinkClass */
    struct StreamClass* stream; /* [21] IMPLICIT StreamClass */
    struct BitmapClass* bitmap; /* [22] IMPLICIT BitmapClass */
    struct LineArtClass* line_art; /* [23] IMPLICIT LineArtClass */
    DynamicLineArtClass* dynamic_line_art; /* [24] IMPLICIT DynamicLineArtClass */
    RectangleClass* rectangle; /* [25] IMPLICIT RectangleClass */
    HotspotClass* hotspot; /* [26] IMPLICIT HotspotClass */
    struct SwitchButtonClass* switch_button; /* [27] IMPLICIT SwitchButtonClass */
    struct PushButtonClass* push_button; /* [28] IMPLICIT PushButtonClass */
    struct TextClass* text; /* [29] IMPLICIT TextClass */
    struct EntryFieldClass* entry_field; /* [30] IMPLICIT EntryFieldClass */
    struct HyperTextClass* hyper_text; /* [31] IMPLICIT HyperTextClass */
    struct SliderClass* slider; /* [32] IMPLICIT SliderClass */
    struct TokenGroupClass* token_group; /* [33] IMPLICIT TokenGroupClass */
    struct ListGroupClass* list_group; /* [34] IMPLICIT ListGroupClass */
    } a;
} GroupItem;

AsnLen BEncGroupItemContent PROTO ((BUF_TYPE b, GroupItem *v));

void BDecGroupItemContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GroupItem *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef AsnList GroupClassSeqOf; /* SEQUENCE OF GroupItem */

AsnLen BEncGroupClassSeqOfContent PROTO ((BUF_TYPE b, GroupClassSeqOf *v));

void BDecGroupClassSeqOfContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GroupClassSeqOf *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct GroupClass /* SET */
{
    RootClass* rootClass; /* RootClass (WITH COMPONENTS
{
    external-reference (WITH COMPONENTS
    {
        ...,
        object-number (0)
    }) PRESENT,
    internal-reference  ABSENT
}) */
    struct StandardIdentifier* standard_identifier; /* [2] IMPLICIT StandardIdentifier OPTIONAL */
    AsnInt* standard_version; /* [3] IMPLICIT INTEGER (1) OPTIONAL */
    AsnOcts object_information; /* [4] IMPLICIT OCTET STRING OPTIONAL */
    ActionClass* on_start_up; /* [5] IMPLICIT ActionClass OPTIONAL */
    ActionClass* on_close_down; /* [6] IMPLICIT ActionClass OPTIONAL */
    AsnInt* original_group_cache_priority; /* [7] IMPLICIT INTEGER (0..255) DEFAULT 127 */
    GroupClassSeqOf* items; /* [8] IMPLICIT GroupClassSeqOf SIZE (1..MAX) OPTIONAL */
} GroupClass;

AsnLen BEncGroupClassContent PROTO ((BUF_TYPE b, GroupClass *v));

void BDecGroupClassContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GroupClass *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct ApplicationClass /* SET */
{
    RootClass* rootClass; /* RootClass (WITH COMPONENTS
{
    external-reference (WITH COMPONENTS
    {
        ...,
        object-number (0)
    }) PRESENT,
    internal-reference  ABSENT
}) */
    struct StandardIdentifier* standard_identifier; /* [2] IMPLICIT StandardIdentifier OPTIONAL */
    AsnInt* standard_version; /* [3] IMPLICIT INTEGER (1) OPTIONAL */
    AsnOcts object_information; /* [4] IMPLICIT OCTET STRING OPTIONAL */
    ActionClass* on_start_up; /* [5] IMPLICIT ActionClass OPTIONAL */
    ActionClass* on_close_down; /* [6] IMPLICIT ActionClass OPTIONAL */
    AsnInt* original_group_cache_priority; /* [7] IMPLICIT INTEGER (0..255) DEFAULT 127 */
    GroupClassSeqOf* items; /* [8] IMPLICIT GroupClassSeqOf SIZE (1..MAX) OPTIONAL */
    ActionClass* on_spawn_close_down; /* [35] IMPLICIT ActionClass OPTIONAL */
    ActionClass* on_restart; /* [36] IMPLICIT ActionClass OPTIONAL */
    ApplicationClassSeqOf* default_attributes; /* [37] IMPLICIT ApplicationClassSeqOf SIZE (1..MAX) OPTIONAL */
    struct Colour* original_desktop_colour; /* [249] Colour OPTIONAL */
} ApplicationClass;

AsnLen BEncApplicationClassContent PROTO ((BUF_TYPE b, ApplicationClass *v));

void BDecApplicationClassContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ApplicationClass *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct SceneClass /* SET */
{
    RootClass* rootClass; /* RootClass (WITH COMPONENTS
{
    external-reference (WITH COMPONENTS
    {
        ...,
        object-number (0)
    }) PRESENT,
    internal-reference  ABSENT
}) */
    struct StandardIdentifier* standard_identifier; /* [2] IMPLICIT StandardIdentifier OPTIONAL */
    AsnInt* standard_version; /* [3] IMPLICIT INTEGER (1) OPTIONAL */
    AsnOcts object_information; /* [4] IMPLICIT OCTET STRING OPTIONAL */
    ActionClass* on_start_up; /* [5] IMPLICIT ActionClass OPTIONAL */
    ActionClass* on_close_down; /* [6] IMPLICIT ActionClass OPTIONAL */
    AsnInt* original_group_cache_priority; /* [7] IMPLICIT INTEGER (0..255) DEFAULT 127 */
    GroupClassSeqOf* items; /* [8] IMPLICIT GroupClassSeqOf SIZE (1..MAX) OPTIONAL */
    AsnInt input_event_register; /* [51] IMPLICIT INTEGER */
    struct SceneCoordinateSystem* scene_coordinate_system; /* [52] IMPLICIT SceneCoordinateSystem */
    struct AspectRatio* aspect_ratio; /* [53] IMPLICIT AspectRatio OPTIONAL */
    AsnBool* moving_cursor; /* [54] IMPLICIT BOOLEAN DEFAULT FALSE */
    SceneClassSeqOf* next_scenes; /* [55] IMPLICIT SceneClassSeqOf SIZE (1..MAX) OPTIONAL */
} SceneClass;

AsnLen BEncSceneClassContent PROTO ((BUF_TYPE b, SceneClass *v));

void BDecSceneClassContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SceneClass *v, AsnLen *bytesDecoded, ENV_TYPE env));





typedef struct InterchangedObject /* CHOICE */
{
    enum InterchangedObjectChoiceId
    {
        INTERCHANGEDOBJECT_APPLICATION,
        INTERCHANGEDOBJECT_SCENE
    } choiceId;
    union InterchangedObjectChoiceUnion
    {
    struct ApplicationClass* application; /* [0] IMPLICIT ApplicationClass */
    struct SceneClass* scene; /* [1] IMPLICIT SceneClass */
    } a;
} InterchangedObject;

AsnLen BEncInterchangedObjectContent PROTO ((BUF_TYPE b, InterchangedObject *v));

void BDecInterchangedObjectContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, InterchangedObject *v, AsnLen *bytesDecoded, ENV_TYPE env));



void PrintInterchangedObject PROTO ((FILE* f, InterchangedObject *v, unsigned short int indent));



extern AsnInt joint_iso_itu_t;
extern AsnInt mheg;
extern AsnInt version;
extern AsnInt mheg_5;

#endif /* conditional include of mh_snacc.h */
